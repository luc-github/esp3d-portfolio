{
  "timestamp": 1736643811.2362192,
  "data": {
    "name": "ESP3D-TFT",
    "type": "main",
    "description": "ESP3D Firmware for ESP32 based TFT ",
    "url": "https://github.com/luc-github/ESP3D-TFT",
    "language": "C",
    "created_at": "2022-08-24T05:55:10+00:00",
    "updated_at": "2025-01-04T03:46:26+00:00",
    "branches": [
      {
        "name": "main",
        "label": "Development",
        "is_production": false,
        "last_commit": {
          "sha": "e45f643",
          "message": "Update esp3d_gcode_parser_service.cpp",
          "author": "Luc",
          "date": "2024-12-03T12:19:48+00:00"
        },
        "protected": false,
        "issues": [
          {
            "number": 77,
            "title": "Very slow communication with connected device to usb host",
            "body": "I am using ESP32-S3 DEV KIT N8R8 with esp3d-tft to communicate via wifi with my cnc 3030 prover max (with GRBL, USB port CH340) and the setting is made to communicate via USB SERIAL port. I can send and I receive data from the cnc through the USB SERIAL port.. The problem is that there is a delay of about 1 second between the sending of the command and the execution from cnc device, this is very clear visible when a file is executed, all commands are executed with a delay between each other and the whole process is interrupted. I tested with communication from my computer directly to port 23 of an esp3d-tft board the delay remains, I tested using the web interface the delay remains on sending commands or executing file. If connect the machine directly to the computer with a usb cable everything works fine.\r\n\r\nCan someone tell me if this is a bug or if I missed something when compiling the code.\r\n\r\nI apologize for my bad English.",
            "state": "open",
            "created_at": "2024-10-24T15:47:10+00:00",
            "updated_at": "2024-11-16T09:31:54+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D-TFT/issues/77",
            "is_pr": false,
            "labels": [
              "bug",
              "Under investigation"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 76,
            "title": "[FEATURE REQUEST]Add Lua interpreter support like in ESP3D",
            "body": "Lua interpreter support is implemented in ESP3D https://esp3d.io/ESP3D/Version_3.X/documentation/lua/\r\n\r\nAdd same support in ESP3D-TFT\r\n",
            "state": "open",
            "created_at": "2024-10-13T07:48:18+00:00",
            "updated_at": "2024-10-13T07:48:18+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D-TFT/issues/76",
            "is_pr": false,
            "labels": [
              "Features"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 74,
            "title": "[FEATURE REQUEST]Add BTT GCODE thumbnails",
            "body": "It was raised to me that now BTT TFT support thumbnails in gcode it is even documented https://github.com/bigtreetech/BIGTREETECH-TouchScreenFirmware?tab=readme-ov-file#adding-gcode-thumbnails\r\n\r\nI think it would be fun to add this feature also if possible - it would need to add an image decoder which is not an issue in theory\r\n I need to see the impact on low memory screens, but at first sight looks possible on others ^_^ TBC\r\n  ",
            "state": "open",
            "created_at": "2024-08-14T05:12:07+00:00",
            "updated_at": "2024-08-14T05:12:28+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D-TFT/issues/74",
            "is_pr": false,
            "labels": [
              "Screen",
              "Features",
              "lvgl 8.x"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 67,
            "title": "[FEATURE REQUEST]Add support of macro defined by webui on screen",
            "body": "Now Tft fw can read the preferences.json, so a screen listing defined macros should be available.\n\nThe question is where to display the macro button?",
            "state": "open",
            "created_at": "2024-04-21T04:35:12+00:00",
            "updated_at": "2024-08-13T00:28:50+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D-TFT/issues/67",
            "is_pr": false,
            "labels": [
              "enhancement"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 55,
            "title": "[FEATURE REQUEST]Code review / refactoring / improvement",
            "body": "This is todo list of several topic that need to be done before release:\r\n\r\n- <s>Use queue for values and process them to avoid racing conditions https://github.com/luc-github/ESP3D-TFT/blob/main/main/core/esp3d_values.cpp#L70-L72\r\nand put the pop/clear the list in display task </s> (Done  :+1: ) \r\n\r\n-  Design different boot logo / splash for each target ( e.g: ESP3D Logo + Target name) to know from start what is display for ",
            "state": "open",
            "created_at": "2024-01-19T04:45:00+00:00",
            "updated_at": "2024-12-14T08:23:40+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D-TFT/issues/55",
            "is_pr": false,
            "labels": [
              "enhancement",
              "help welcome",
              "Planned"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 54,
            "title": "[FEATURE REQUEST]Move to lvgl 9.0",
            "body": "I did some reading on migration guide and API description - the mechanism seems pretty identical, API is very close but there are a lot of renaming\r\nI plan to really start to work on it when official 9.0 release is done and move to 9.x when first bug release is out  ",
            "state": "open",
            "created_at": "2024-01-17T10:43:01+00:00",
            "updated_at": "2024-08-29T06:45:54+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D-TFT/issues/54",
            "is_pr": false,
            "labels": [
              "enhancement",
              "lvgl 9.x"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 53,
            "title": "[FEATURE REQUEST]Do better snapshot code with no memory need",
            "body": "Currently the lvgl snapshot API use a lot of memory because it allocate all screen in one buffer then push data to it, it crash if any animation or scrolling text is active which is really not convenient\r\n\r\nI am thinking to use my previous method for snapshot (in first 3.0 version ) that actually hook the `void esp_lv_disp_flush(lv_disp_drv_t *disp, const lv_area_t *area, lv_color_t *color_p)` function.\r\nIt did not need any buffer screen unlike the lvgl API and may just freeze the screen the time the data are saved \r\nhere the old code :\r\n```\r\n/* Display flushing */\r\nvoid esp_lv_disp_flush(lv_disp_drv_t *disp, const lv_area_t *area, lv_color_t *color_p)\r\n{\r\n    //TODO: need to write version for oled with big resolution\r\n    uint16_t c;\r\n    esp3d_screen.startWrite(); /* Start new TFT transaction */\r\n    esp3d_screen.setAddrWindow(area->x1, area->y1, (area->x2 - area->x1 + 1), (area->y2 - area->y1 + 1)); /* set the working window */\r\n    for (int y = area->y1; y <= area->y2; y++) {\r\n        for (int x = area->x1; x <= area->x2; x++) {\r\n            c = color_p->full;\r\n            esp3d_screen.writeColor(c, 1);\r\n#if defined(DISPLAY_SNAPSHOT_FEATURE)\r\n            if(bSnapshot) {\r\n                uint32_t data = lv_color_to32(*color_p);\r\n                //to handle any write issue\r\n                if (fsSnapFile.write((const uint8_t *)(&data), sizeof(uint32_t)) !=  sizeof(uint32_t)) {\r\n                    //if error we stop to dump\r\n                    bSnapshot = false;\r\n                    //raise error\r\n                    error_snapshot = 1;\r\n                }\r\n            }\r\n#endif //DISPLAY_SNAPSHOT_FEATURE\r\n            color_p++;\r\n        }\r\n    }\r\n    esp3d_screen.endWrite(); /* terminate TFT transaction */\r\n    lv_disp_flush_ready(disp); /* tell lvgl that flushing is done */\r\n}\r\n\r\n\r\nbool Display::snapshot(char * filename)\r\n{\r\n    bool res = false;\r\n#if defined(DISPLAY_SNAPSHOT_FEATURE)\r\n    //sanity check to avoid to corrupt FS with capacity overload\r\n    error_snapshot = 0;\r\n    if (ESP_FileSystem::freeBytes() < SNAP_SIZE) {\r\n        return false;\r\n    }\r\n    if(filename) {\r\n        fsSnapFile = ESP_FileSystem::open(filename, ESP_FILE_WRITE);\r\n    } else {\r\n        fsSnapFile = ESP_FileSystem::open(SNAPFILENAME, ESP_FILE_WRITE);\r\n    }\r\n    if (!fsSnapFile) {\r\n        return false;\r\n    }\r\n\r\n    bSnapshot = true;\r\n    lv_obj_invalidate(lv_scr_act());\r\n    lv_refr_now(lv_disp_get_default());                    /* Will call our disp_drv.disp_flush function */\r\n    bSnapshot = false;\r\n    fsSnapFile.close();\r\n    //if any snapshot error\r\n    if (error_snapshot == 0) {\r\n        res = true;\r\n    }\r\n#endif //DISPLAY_SNAPSHOT_FEATURE\r\n    return res;\r\n}\r\n```\r\n\r\nthe new lvgl API use one function only:\r\n```\r\nstatic void lv_disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p) {\r\n  esp_lcd_panel_draw_bitmap(disp_panel, area->x1, area->y1, area->x2 + 1, area->y2 + 1, color_p);  \r\n}\r\n```\r\nso it may be possible to redo same for snapshot - this method do a real snap what ever is displayed and even there is an animation.=> TBC ",
            "state": "open",
            "created_at": "2024-01-07T04:47:08+00:00",
            "updated_at": "2024-01-07T04:47:09+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D-TFT/issues/53",
            "is_pr": false,
            "labels": [
              "bug",
              "Features"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 12,
            "title": "[FEATURE REQUEST]WhatsApp Notification",
            "body": "How to do is here https://www.callmebot.com/blog/free-api-whatsapp-messages/ - it is free and it use same way as others - so it is easy to implement\r\n",
            "state": "open",
            "created_at": "2023-02-20T06:58:18+00:00",
            "updated_at": "2023-02-20T06:58:52+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D-TFT/issues/12",
            "is_pr": false,
            "labels": [
              "enhancement"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 5,
            "title": "[ENHANCEMENT]Add Pin interrupt support on FT5X06 when supported to save mcu time instead of doing permanent polling",
            "body": "Doing permament polling on touch to see if was pressed save mcu time on some solution (WT32-SC01 New Plus),  int pin for FT5X06 is available, but seems not working on my device (https://github.com/luc-github/ESP3D-TFT/discussions/1#discussioncomment-3762021), may be hardware issue ? \r\n\r\nIf anyone know how to solve this with a working solution - feedback is welcome \ud83d\ude38 ",
            "state": "open",
            "created_at": "2022-10-01T00:07:26+00:00",
            "updated_at": "2022-10-01T00:07:26+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D-TFT/issues/5",
            "is_pr": false,
            "labels": [
              "enhancement",
              "help welcome",
              "Drivers",
              "Touch"
            ],
            "priority": "normal",
            "assignee": null
          }
        ]
      }
    ],
    "contributors": [
      {
        "login": "luc-github",
        "contributions": 834,
        "url": "https://github.com/luc-github"
      },
      {
        "login": "serisman",
        "contributions": 13,
        "url": "https://github.com/serisman"
      },
      {
        "login": "liqijian101",
        "contributions": 5,
        "url": "https://github.com/liqijian101"
      },
      {
        "login": "allcontributors[bot]",
        "contributions": 3,
        "url": "https://github.com/apps/allcontributors"
      },
      {
        "login": "3DSmitty",
        "contributions": 1,
        "url": "https://github.com/3DSmitty"
      }
    ],
    "activity": {
      "recent_commits": [
        {
          "sha": "e45f643",
          "message": "Update esp3d_gcode_parser_service.cpp",
          "author": "Luc",
          "date": "2024-12-03T12:19:48+00:00"
        },
        {
          "sha": "e0e717b",
          "message": "Fix abort command is ignored",
          "author": "Luc",
          "date": "2024-12-03T12:19:43+00:00"
        },
        {
          "sha": "bca0a15",
          "message": "Update esp_flash_littleFs.cpp",
          "author": "Luc",
          "date": "2024-12-03T08:26:17+00:00"
        },
        {
          "sha": "a625ebd",
          "message": "Idf 5.1.5 (#78)\n\n* Use idf 5.1.5\r\n* Change vTaskDelay by esp3d_hal::wait for consistency\r\n* Fix Scan not working due to API change\r\n* Fix missing .enum_filter_cb for USB due to API change\r\n* Add info.json and badge version\r\n* Improve detection of connection to avoid race condition\r\n* Add more flexible ack detection in case of data corruption\r\n* Update littlefs from 1.6.0 to v1.14.8\r\n* Update USB definition struct due to new API\r\n* Update idf-setup.sh to use idf 5.1.5 in CI\r\n* Adjust versions in code / readme / json\r\n\r\n---------\r\n\r\nSigned-off-by: Luc <8822552+luc-github@users.noreply.github.com>",
          "author": "Luc",
          "date": "2024-12-03T03:16:11+00:00"
        },
        {
          "sha": "5dca9c4",
          "message": "Add version badge",
          "author": "Luc",
          "date": "2024-12-01T08:22:44+00:00"
        },
        {
          "sha": "7ccc509",
          "message": "Add Waveshare 7 TFT Support\n\n* Extract hardware target from common make to define resolution\r\n* Fix compilation failed if disable Time\r\n* Fix compilation issue if nothing is enabled but SD and WiFi\r\n* Fix warning  if nothing is enabled but SD and WiFi\r\n* Update esp3d_version.h",
          "author": "Luc",
          "date": "2024-08-14T04:19:07+00:00"
        },
        {
          "sha": "74df62e",
          "message": "Display IDF version during compilation",
          "author": "Luc",
          "date": "2024-07-24T01:23:34+00:00"
        },
        {
          "sha": "0ef520f",
          "message": "Refactorization of make files to make them more readable (comment/ colors / status)\n\nAdd development define to disable telnet welcome message if necessary\nbump version",
          "author": "Luc",
          "date": "2024-07-09T03:07:15+00:00"
        },
        {
          "sha": "f035f28",
          "message": "FIx wrong single quote setting",
          "author": "Luc",
          "date": "2024-05-30T01:40:00+00:00"
        },
        {
          "sha": "28747db",
          "message": "Add scripts to format code (c/cpp/h/js/css/scss)\n\nAdd .prettierrc as js/scss/css format configuration\nApply style to code source",
          "author": "Luc",
          "date": "2024-05-30T01:26:02+00:00"
        }
      ],
      "commit_activity": [
        {
          "week": "2024-01-21T00:00:00+00:00",
          "total": 1,
          "days": [
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-01-28T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-02-04T00:00:00+00:00",
          "total": 2,
          "days": [
            0,
            0,
            0,
            1,
            0,
            1,
            0
          ]
        },
        {
          "week": "2024-02-11T00:00:00+00:00",
          "total": 3,
          "days": [
            0,
            0,
            3,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-02-18T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-02-25T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-03-03T00:00:00+00:00",
          "total": 10,
          "days": [
            0,
            0,
            0,
            0,
            1,
            1,
            8
          ]
        },
        {
          "week": "2024-03-10T00:00:00+00:00",
          "total": 18,
          "days": [
            6,
            0,
            5,
            5,
            1,
            0,
            1
          ]
        },
        {
          "week": "2024-03-17T00:00:00+00:00",
          "total": 24,
          "days": [
            6,
            4,
            5,
            1,
            0,
            4,
            4
          ]
        },
        {
          "week": "2024-03-24T00:00:00+00:00",
          "total": 26,
          "days": [
            5,
            1,
            6,
            0,
            4,
            10,
            0
          ]
        },
        {
          "week": "2024-03-31T00:00:00+00:00",
          "total": 10,
          "days": [
            0,
            0,
            0,
            1,
            7,
            2,
            0
          ]
        },
        {
          "week": "2024-04-07T00:00:00+00:00",
          "total": 6,
          "days": [
            1,
            3,
            1,
            1,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-04-14T00:00:00+00:00",
          "total": 31,
          "days": [
            3,
            1,
            16,
            2,
            2,
            3,
            4
          ]
        },
        {
          "week": "2024-04-21T00:00:00+00:00",
          "total": 3,
          "days": [
            2,
            1,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-04-28T00:00:00+00:00",
          "total": 5,
          "days": [
            0,
            0,
            0,
            3,
            2,
            0,
            0
          ]
        },
        {
          "week": "2024-05-05T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-12T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-19T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-26T00:00:00+00:00",
          "total": 3,
          "days": [
            0,
            0,
            0,
            0,
            3,
            0,
            0
          ]
        },
        {
          "week": "2024-06-02T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-09T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-16T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-23T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-30T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-07T00:00:00+00:00",
          "total": 1,
          "days": [
            0,
            0,
            1,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-14T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-21T00:00:00+00:00",
          "total": 1,
          "days": [
            0,
            0,
            0,
            1,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-28T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-04T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-11T00:00:00+00:00",
          "total": 1,
          "days": [
            0,
            0,
            0,
            1,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-18T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-25T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-01T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-08T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-15T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-22T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-29T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-06T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-13T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-20T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-27T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-11-03T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-11-10T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-11-17T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-11-24T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-12-01T00:00:00+00:00",
          "total": 5,
          "days": [
            1,
            0,
            4,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-12-08T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-12-15T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-12-22T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-12-29T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-01-05T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-01-12T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      ]
    },
    "statistics": {
      "size": 100356,
      "stars": 41,
      "forks": 9,
      "open_issues": 9,
      "watchers": 41,
      "default_branch": "main",
      "license": "GNU General Public License v3.0"
    }
  }
}