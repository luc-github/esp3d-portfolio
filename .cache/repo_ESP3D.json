{
  "timestamp": 1741741153.3270574,
  "data": {
    "name": "ESP3D",
    "type": "main",
    "description": "FW for ESP8266/ESP8285/ESP32 used with 3D printer",
    "url": "https://github.com/luc-github/ESP3D",
    "language": "C++",
    "created_at": "2015-04-16T13:47:44+00:00",
    "updated_at": "2025-03-11T09:49:25+00:00",
    "branches": [
      {
        "name": "2.1.x",
        "label": "Production",
        "is_production": true,
        "last_commit": {
          "sha": "24924cd",
          "message": "Update README.md\n\nSigned-off-by: Luc <8822552+luc-github@users.noreply.github.com>",
          "author": "Luc",
          "date": "2025-02-23T11:25:53+00:00"
        },
        "protected": false,
        "issues": [
          {
            "number": 1077,
            "title": "[BUG] Startup problems when lots of serial data is send to the ESP3D board during startup",
            "body": "**Describe the bug**\nUsing ESP3D V3.0, I noticed that when a lot of serial data is generated during the startup of ESP3D then the board might lockup or restart.\n\nI recently developed a motherboard bootloader that I put into test mode to see if everything works reliably.\nDuring the test the bootloader repeatedly send some text like below to the ESP3D.\n\n```\nBootloader started\nDevice mounted\nComparing firmware to flash contents.\n======================================================== Equal\nFirmware file and flash contents are equal, no update required\n```\nThis message repeats about once a second. The ===... are send 1 character at a time like a progress bar.\n\nI noticed that the ESP3D will not connect as a client to the wifi network if this serial data is send during its startup process. I also noticed that if I block the messages and let the ESP3D connect to the wifi network, that the serial messages are never shown on the web terminal.\n\n**Expected behavior**\n1. Connect to the Wifi as AP even if serial data is incoming\n2. Show the serial data in the web terminal even if the data is send quite quickly\n\n**ESP3D Firmware:**\n- ESP3D FW version: 3.0.0-4b1.M2.1\n- ESP3D-WebUI Version: 3.0.0.2b1\n- Wifi mode: AP\n- Flash method: build in PlatformIO, flashed OTA\n\n**Target Firmware:**\n- Name:  Marlin\n- Version 2.0\n\n**Board used (please complete the following information):**\n\n- MCU: ESP32-S2\n- Name: Wemos ESP32-S2 mini V1.0.0\n- Flash size: 4M + 2MB PSram\n\n========================================================\nI have a quick look into the code and found a potential issue in serial_service_esp32.cpp\n\n```\nvoid ESP3DSerialService::receiveCb() {\n  if (!started()) {\n    return;\n  }\n  if (xSemaphoreTake(_mutex, portMAX_DELAY)) {\n    uint32_t now = millis();\n    while ((millis() - now) < SERIAL_COMMUNICATION_TIMEOUT) {\n      if (Serials[_serialIndex]->available()) {\n        _buffer[_buffer_size] = Serials[_serialIndex]->read();\n        now = millis();\n        if (esp3d_string::isRealTimeCommand(_buffer[_buffer_size])) {\n          flushChar(_buffer[_buffer_size]);\n          _buffer[_buffer_size] = '\\0'; //remove realtime command from buffer\n        } else {\n          _buffer_size++;\n          if (_buffer_size > ESP3D_SERIAL_BUFFER_SIZE ||\n              _buffer[_buffer_size - 1] == '\\n') {\n            flushBuffer();\n          }\n        }\n      }\n    }\n    xSemaphoreGive(_mutex);\n  } else {\n    esp3d_log_e(\"Mutex not taken\");\n  }\n}\n```\nreceiveCb() will never exit when serial data is send at a fast rate (faster than SERIAL_COMMUNICATION_TIMEOUT = 500 ms). I'm not sure if this will call a buffer overrun and cause the crash/restart that I'm seeing.\nIn normal 3D printer/CNC operation this can probably never happen.\nPerhaps it's better to exit the while loop when the buffer is full (_buffer_size > ESP3D_SERIAL_BUFFER_SIZE).",
            "state": "open",
            "created_at": "2025-03-10T18:30:06+00:00",
            "updated_at": "2025-03-11T22:43:17+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1077",
            "is_pr": false,
            "labels": [
              "bug",
              "Waiting for details",
              "ESP3D 3.X",
              "ESP32-S2"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 1074,
            "title": "[BUG-FIX]  The problem with the SSD1306wire library and its solution (add to the main code)",
            "body": "**Describe the bug**\n\n<!--A clear and concise description of what the bug is.-->\n\nThe problem is with compiling the code for the esp32-c3 with the enabled oled ssd1306 wire feature in the PlatformIO.\n\nI was able to fix the code myself, and therefore I will attach a file with the corrected .cpp code. The rest can be taken from the original library.\n\n`\n#include <Wire.h>\n\n#include \"SSD1306wire.h\"\n\n\n\ntypedef void prog_void;\ntypedef char prog_char;\ntypedef unsigned char prog_uchar;\ntypedef char prog_int8_t;\ntypedef unsigned char prog_uint8_t;\ntypedef short prog_int16_t;\ntypedef unsigned short prog_uint16_t;\ntypedef long prog_int32_t;\ntypedef unsigned long prog_uint32_t;\n\n#define PROGMEM\n#define PGM_P        const char *\n#define PGM_VOID_P   const void *\n#define PSTR(s)      (s)\n#define _SFR_BYTE(n) (n)\n\n#define pgm_read_byte(addr) (*(const unsigned char *)(addr))\n#define pgm_read_word(addr)           \\\n  ({                                  \\\n    typeof(addr) _addr = (addr);      \\\n    *(const unsigned short *)(_addr); \\\n  })\n#define pgm_read_dword(addr)         \\\n  ({                                 \\\n    typeof(addr) _addr = (addr);     \\\n    *(const unsigned long *)(_addr); \\\n  })\n#define pgm_read_float(addr)     \\\n  ({                             \\\n    typeof(addr) _addr = (addr); \\\n    *(const float *)(_addr);     \\\n  })\n#define pgm_read_ptr(addr)       \\\n  ({                             \\\n    typeof(addr) _addr = (addr); \\\n    *(void *const *)(_addr);     \\\n  })\n\n#define pgm_get_far_address(x) ((uint32_t)(&(x)))\n\n#define pgm_read_byte_near(addr)  pgm_read_byte(addr)\n#define pgm_read_word_near(addr)  pgm_read_word(addr)\n#define pgm_read_dword_near(addr) pgm_read_dword(addr)\n#define pgm_read_float_near(addr) pgm_read_float(addr)\n#define pgm_read_ptr_near(addr)   pgm_read_ptr(addr)\n#define pgm_read_byte_far(addr)   pgm_read_byte(addr)\n#define pgm_read_word_far(addr)   pgm_read_word(addr)\n#define pgm_read_dword_far(addr)  pgm_read_dword(addr)\n#define pgm_read_float_far(addr)  pgm_read_float(addr)\n#define pgm_read_ptr_far(addr)    pgm_read_ptr(addr)\n\n#define memcmp_P      memcmp\n#define memccpy_P     memccpy\n#define memmem_P      memmem\n#define memcpy_P      memcpy\n#define strcpy_P      strcpy\n#define strncpy_P     strncpy\n#define strcat_P      strcat\n#define strncat_P     strncat\n#define strcmp_P      strcmp\n#define strncmp_P     strncmp\n#define strcasecmp_P  strcasecmp\n#define strncasecmp_P strncasecmp\n#define strlen_P      strlen\n#define strnlen_P     strnlen\n#define strstr_P      strstr\n#define printf_P      printf\n#define sprintf_P     sprintf\n#define snprintf_P    snprintf\n#define vsnprintf_P   vsnprintf\n\n\n\nvoid SSD1306wire::begin(const SSD1306wire_display* display, uint8_t i2c_addr) {\n    _i2c_addr = i2c_addr;\n    Wire.begin();\n    _max_columns = pgm_read_byte(&display->width);\n    _max_rows = pgm_read_byte(&display->height) >> 3;\n    const uint8_t* init_sequence = (const uint8_t*)pgm_read_word(&display->init_sequence);\n    uint8_t init_sequence_size = pgm_read_byte(&display->init_sequence_size);\n    Wire.beginTransmission(_i2c_addr);\n    Wire.write(SSD1306_COMMAND);\n    for(uint8_t i = 0; i < init_sequence_size; i++) {\n        WireSend(SSD1306_COMMAND, pgm_read_byte(init_sequence + i));\n    }\n    Wire.endTransmission();\n    setCursor(0, 0);\n}\n\n\nvoid SSD1306wire::set400kHz() {\n\tWire.setClock(400000);\n}\n\nsize_t SSD1306wire::write(uint8_t character) {\n\tif((_column >= _max_columns) || (_row >= _max_rows))\n\t\treturn 1;\n\tif(_font == 0)\n\t\treturn 1;\n\n\tuint8_t font_min_width = pgm_read_byte(_font);\n\tuint8_t font_rows = pgm_read_byte(_font + 1);\n\tuint8_t font_first_char = pgm_read_byte(_font + 2);\n\tuint8_t font_last_char = pgm_read_byte(_font + 3);\n\n\tuint8_t char_width = 0;\n\tconst uint8_t *char_offset = _font + 5 + font_last_char - font_first_char;\n\tif((character >= font_first_char) && (character <= font_last_char)) {\n\t\tchar_width = pgm_read_byte(_font + 4 + character - font_first_char) / font_rows;\n\t\tfor(uint8_t i = character - font_first_char; i > 0; --i) {\n\t\t\tchar_offset += pgm_read_byte(_font + 3 + i);\n\t\t}\n\t}\n\n\tuint8_t max_rows = _row + font_rows;\n\tif (max_rows > _max_rows)\n\t\tmax_rows = _max_rows;\n\n\tfor(uint8_t row = _row; row < max_rows; ++row) {\n\t\tSetColumn(_column);\n\t\tSetRow(row);\n\n\t\tuint8_t c;\n\t\tuint8_t i = 0;\n\t\tWire.beginTransmission(_i2c_addr);\n\t\tWire.write(SSD1306_DATA);\n\t\twhile(i < char_width) {\n\t\t\tif (i + _column >= _max_columns)\n\t\t\t\tbreak;\n\t\t\tc = pgm_read_byte(char_offset + i);\n\t\t\tif(_inv_font) c = ~ c;\n\t\t\tWire.write(c);\n\t\t\t++i;\n\t\t}\n\t\tc = 0;\n\t\tif(_inv_font) c = ~ c;\n\t\twhile(i < font_min_width) {\n\t\t\tif (i + _column >= _max_columns)\n\t\t\t\tbreak;\n\t\t\tWire.write(c);\n\t\t\t++i;\n\t\t}\n\t\tWire.endTransmission();\n\n\t\tchar_offset += char_width;\n\t}\n\n\tif(char_width < font_min_width)\n\t\tchar_width = font_min_width;\n\t_column += char_width;\n\tif(_column > _max_columns)\n\t\t_column = _max_columns;\n\n\treturn 1;\n}\n\nsize_t SSD1306wire::write(const uint8_t *buffer, size_t size) {\n\tsize_t outchars = 0;\n\n\tfor(int c = 0; c < size; c++) {\n\t\toutchars += write(*(buffer + c));\n\t}\n\n\treturn outchars;\n}\n\nvoid SSD1306wire::syncCursor() {\n\tif(_column < _max_columns)\n\t\tSetColumn(_column);\n\tif(_row < _max_rows)\n\t\tSetRow(_row);\n}\n\nvoid SSD1306wire::setPower(bool on) {\n\tWire.beginTransmission(_i2c_addr);\n\tWire.write(SSD1306_COMMAND);\n\tWire.write(on ? 0xAF : 0xAE);\n\tWire.endTransmission();\n}\n\nvoid SSD1306wire::setContrast(uint8_t contrast) {\n\tWire.beginTransmission(_i2c_addr);\n\tWire.write(SSD1306_COMMAND);\n\tWire.write(0x81);\n\tWire.write(contrast);\n\tWire.endTransmission();\n}\n\nvoid SSD1306wire::inverseDisplay(bool inverse) {\n\tWire.beginTransmission(_i2c_addr);\n\tWire.write(SSD1306_COMMAND);\n\tWire.write(inverse ? 0xA7 : 0xA6);\n\tWire.endTransmission();\n}\n\nvoid SSD1306wire::SetColumn(uint8_t column) {\n\tWire.beginTransmission(_i2c_addr);\n\tWire.write(SSD1306_COMMAND);\n\tWire.write(0x00 | (column & 0x0F));\n\tWire.write(0x10 | (column >> 4));\n\tWire.endTransmission();\n}\n\nvoid SSD1306wire::SetRow(uint8_t row) {\n\tWire.beginTransmission(_i2c_addr);\n\tWire.write(SSD1306_COMMAND);\n\tWire.write(0xB0 | row);\n\tWire.endTransmission();\n}\n\nvoid SSD1306wire::clear() {\n\tSetColumn(0);\n\n\tfor(uint8_t row = 0; row < _max_rows; ++row) {\n\t\tSetRow(row);\n\n\t\tWire.beginTransmission(_i2c_addr);\n\t\tWire.write(SSD1306_DATA);\n\t\tfor(uint8_t col = 0; col < _max_columns; ++col) {\n\t\t\tWireSend(SSD1306_DATA, 0);\n\t\t}\n\t\tWire.endTransmission();\n\t}\n\n\tsetCursorForce(0, 0);\n}\n\nvoid SSD1306wire::clearToEOL() {\n\tif((_column >= _max_columns) || (_row >= _max_rows))\n\t\treturn;\n\tif(_font == 0)\n\t\treturn;\n\n\tuint8_t max_rows = _row + pgm_read_byte(_font + 1);\n\tif (max_rows > _max_rows)\n\t\tmax_rows = _max_rows;\n\n\tuint8_t c = 0;\n\tif(_inv_font) c = ~ c;\n\n\tfor(uint8_t row = _row; row < max_rows; ++row) {\n\t\tSetColumn(_column);\n\t\tSetRow(row);\n\n\t\tWire.beginTransmission(_i2c_addr);\n\t\tWire.write(SSD1306_DATA);\n\t\tfor(uint8_t col = _column; col < _max_columns; ++col) {\n\t\t\tWireSend(SSD1306_DATA, c);\n\t\t}\n\t\tWire.endTransmission();\n\t}\n\t_column = _max_columns;\n}\n\nvoid SSD1306wire::WireSend(uint8_t type, uint8_t value) {\n\tif(Wire.write(value) == 0) {\n\t\tWire.endTransmission();\n\t\tWire.beginTransmission(_i2c_addr);\n\t\tWire.write(type);\n\t\tWire.write(value);\n\t}\n}`\n\nAhem, I'm sorry, the code can't be inserted otherwise........",
            "state": "open",
            "created_at": "2025-03-04T18:34:57+00:00",
            "updated_at": "2025-03-10T04:14:00+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1074",
            "is_pr": false,
            "labels": [
              "bug",
              "Waiting for details",
              "Cannot Duplicate",
              "ESP32-C3"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 1058,
            "title": "[FEATURE REQUEST]Waveshare ESP32-S3 1.47inch Display Development Board, 172\u00d7320, Dual-Core Processor, With RGB LED",
            "body": "This board as screen / sd card / 8 PSRAM and 16MB Flash\r\nWaveshare ESP32-S3 1.47inch Display Development Board, 172\u00d7320, Dual-Core Processor, Supports WiFi & Bluetooth, With RGB LED\r\nhttps://www.waveshare.com/esp32-s3-lcd-1.47.htm\r\nhttps://www.waveshare.com/wiki/ESP32-S3-LCD-1.47\r\nI think if the USB port is the OTG port it would be the perfect device to stream GCODE and be the reference board for it",
            "state": "open",
            "created_at": "2024-10-21T04:51:29+00:00",
            "updated_at": "2024-11-25T01:04:06+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1058",
            "is_pr": false,
            "labels": [
              "Feature request",
              "On Hold",
              "ESP3D 3.X"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 795,
            "title": "[TODO]\u2611Code refactoring plan",
            "body": "There several area of refactoring in the code they are currently not mandatory but need to be addressed one day, so the purpose it to track them here as they can be a task out of current development because they won't change features but improve code itself and may be make it more robust:\r\n\r\n* <s>Change GenLinkedList to vector</s>:+1:\r\n* Implement better file encapsulation class to cover any new file system and any new arch\r\n* Web server abstraction layer to allow to update smoothly to another solution\r\n* Add https support once there is an HTTP server that is implemented that support it \r\n* Implement Wifi HAL and Ethernet HAL to avoid any arch def out of the HAL, and only limite the def to the features themself\r\n* Implement a target HAL to centralize all difference need by specific FW in one file or directory\r\n* <s>Refactoring the dispatch commands flow to make it more clear and remove unnecessary functions, use the message format of ESP3D-TFT</s>:+1:\r\n* <s>Request authentication of telnet / websocket only once per session not for each commands</s>:+1: \r\n* TBD\r\n\r\n\r\nAnyone willing to contribute is welcome of course \ud83d\ude38 in that case open discussion board for the targeted topic first to discussing, status of implementation will be here anyways",
            "state": "open",
            "created_at": "2022-07-28T00:34:00+00:00",
            "updated_at": "2024-03-04T04:49:46+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/795",
            "is_pr": false,
            "labels": [
              "Help Welcome",
              "Code Simplification",
              "ESP3D 3.X",
              "Planned"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 575,
            "title": "\u23f8\ufe0f[FEATURE REQUEST]\ud83e\udd84Use better serial protocol communication",
            "body": "Current protocol between printer and ESP3D use raw serial which is ok for GCODE communication but no really efficient for file transfer\r\nMore over if some output come from printer board due to auto send it bring some trouble on file transfer which is already slow\r\n\r\nCurrent MKS protocol encapsulate each command in a frame with specific header,  it also use 2 additionnal pins for notification/ack ,and different headers for GCODE / File transfer / Error, which make coexistance easier\r\nThis protocol allow 110KB/S transfer vs 0.4KB/S M28/M29 transfer and handle GCODE even during transfer.\r\nThat said current MKS protocol miss 2 things:    \r\n* CRC to ensure data are correct\r\n* resend process in case of corrupted data\r\n\r\nI think add a CRC32 should improve reliability and will only use couple of byte on each frame, and calculation should not affect too much performances.  if done when data is received\r\nBased on this crc, if any error happen then do a resend, if more than 2 resend is needed  on same packet, then automaticaly ask for decreasing baudrate to do more secure transfer. \r\n\r\nThis would need to add some code in Printer FW  but will ensure communication for file transfer as well as commands \r\nThis will be between esp3d and printer like on MKS Wifi so external progam won't be affected.\r\n\r\nI am considering to write a library that could be used to hook the serial wifi port, but this also means need a dedicated wifi port like BTT do for board or TFT or an available UART port  \r\nIf Serial port  is same as USB one, it won't work (e.g: Mega/Ramps and aux 1),  so I need to see if can handle raw serial in same time or consider it as limitation= no support of shared solution, may add custom GCODE  to switch from one mode to another ?\r\nIn addition it need 2 additional pins available.\r\n\r\nThis would allow to remove the need of supporting the slow and unreliable M28/M29 protocol but bring more work on ESP3D part by adding a daughter library / Serial protocol accross FW  (Repetier / Marlin / Smoothieware/ TBD...)\r\n\r\nAny feedback /comment is welcome  \r\n\r\n",
            "state": "open",
            "created_at": "2021-02-01T12:13:07+00:00",
            "updated_at": "2024-03-06T00:14:48+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/575",
            "is_pr": false,
            "labels": [
              "Feature request",
              "Feedback Welcome",
              "ESP3D 3.X"
            ],
            "priority": "normal",
            "assignee": "luc-github"
          },
          {
            "number": 568,
            "title": "[FEATURE REQUEST]\ud83e\udd84USB Disk support using CH376S chip",
            "body": "Global FS support Flash and SD, now let's try to add USB Flash disk/key using SPI and CH376s Chip\r\n\r\nThis library looks very promising https://github.com/djuseeq/Ch376msc\r\ne\r\nChip is using 3.3 by default but need 5V to power the USB disk\r\nIt need to test features , if work as expected then need to implement an abstraction layer for the USB FS and  add it to the global FS",
            "state": "open",
            "created_at": "2021-01-24T19:14:07+00:00",
            "updated_at": "2024-10-28T12:10:03+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/568",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP3D 3.X",
              "Planned",
              "USB"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 243,
            "title": "[FEATURE REQUEST]\ud83e\udd84GCODE Streamer Host definition for 3.X",
            "body": "Time to define what host feature will be:\r\nBasic description\r\n1 - Read Gcode from SD \r\n2- Send GCODE to printer FW via Serial\r\n3 - Wait for ack\r\n4 - if ack go to 1 / if error go to 2\r\n\r\nNow need to clarify each part : \r\n* Point 1  is no issue so far: just store file name / currentline \r\n* Point 2 need more elaborate:\r\n1 - add Line numbering in command\r\n`N1 G28`\r\nReset the line numbering is M110 N0 on Repetier / Marlin / Smoothiware\r\n2 - add command checksum for safety (all command char are XOR+*+checksum calculated)\r\n`N20 M105*20`\r\n* Point4 : ack always use ok +line number \r\n`ok 20`\r\nif error on line number or checksum you get\r\n`resend 20`\r\n\r\nNot sure if special command need to be handled (like @pause) right now as it is not a host that have direct UI, but will be when Oled Screen is enabled as well as rotary encoder is supported.\r\n\r\nOne command is key: Emergency stop, to stop sending commands ans stop printer FW\r\n",
            "state": "open",
            "created_at": "2018-07-14T13:24:33+00:00",
            "updated_at": "2024-06-01T03:17:55+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/243",
            "is_pr": false,
            "labels": [
              "Feature request",
              "Feedback Welcome",
              "ESP3D 3.X"
            ],
            "priority": "normal",
            "assignee": null
          }
        ]
      },
      {
        "name": "3.0",
        "label": "Development",
        "is_production": false,
        "last_commit": {
          "sha": "750ef32",
          "message": "Update wificonfig.cpp",
          "author": "Luc",
          "date": "2025-01-30T08:51:56+00:00"
        },
        "protected": false,
        "issues": [
          {
            "number": 1077,
            "title": "[BUG] Startup problems when lots of serial data is send to the ESP3D board during startup",
            "body": "**Describe the bug**\nUsing ESP3D V3.0, I noticed that when a lot of serial data is generated during the startup of ESP3D then the board might lockup or restart.\n\nI recently developed a motherboard bootloader that I put into test mode to see if everything works reliably.\nDuring the test the bootloader repeatedly send some text like below to the ESP3D.\n\n```\nBootloader started\nDevice mounted\nComparing firmware to flash contents.\n======================================================== Equal\nFirmware file and flash contents are equal, no update required\n```\nThis message repeats about once a second. The ===... are send 1 character at a time like a progress bar.\n\nI noticed that the ESP3D will not connect as a client to the wifi network if this serial data is send during its startup process. I also noticed that if I block the messages and let the ESP3D connect to the wifi network, that the serial messages are never shown on the web terminal.\n\n**Expected behavior**\n1. Connect to the Wifi as AP even if serial data is incoming\n2. Show the serial data in the web terminal even if the data is send quite quickly\n\n**ESP3D Firmware:**\n- ESP3D FW version: 3.0.0-4b1.M2.1\n- ESP3D-WebUI Version: 3.0.0.2b1\n- Wifi mode: AP\n- Flash method: build in PlatformIO, flashed OTA\n\n**Target Firmware:**\n- Name:  Marlin\n- Version 2.0\n\n**Board used (please complete the following information):**\n\n- MCU: ESP32-S2\n- Name: Wemos ESP32-S2 mini V1.0.0\n- Flash size: 4M + 2MB PSram\n\n========================================================\nI have a quick look into the code and found a potential issue in serial_service_esp32.cpp\n\n```\nvoid ESP3DSerialService::receiveCb() {\n  if (!started()) {\n    return;\n  }\n  if (xSemaphoreTake(_mutex, portMAX_DELAY)) {\n    uint32_t now = millis();\n    while ((millis() - now) < SERIAL_COMMUNICATION_TIMEOUT) {\n      if (Serials[_serialIndex]->available()) {\n        _buffer[_buffer_size] = Serials[_serialIndex]->read();\n        now = millis();\n        if (esp3d_string::isRealTimeCommand(_buffer[_buffer_size])) {\n          flushChar(_buffer[_buffer_size]);\n          _buffer[_buffer_size] = '\\0'; //remove realtime command from buffer\n        } else {\n          _buffer_size++;\n          if (_buffer_size > ESP3D_SERIAL_BUFFER_SIZE ||\n              _buffer[_buffer_size - 1] == '\\n') {\n            flushBuffer();\n          }\n        }\n      }\n    }\n    xSemaphoreGive(_mutex);\n  } else {\n    esp3d_log_e(\"Mutex not taken\");\n  }\n}\n```\nreceiveCb() will never exit when serial data is send at a fast rate (faster than SERIAL_COMMUNICATION_TIMEOUT = 500 ms). I'm not sure if this will call a buffer overrun and cause the crash/restart that I'm seeing.\nIn normal 3D printer/CNC operation this can probably never happen.\nPerhaps it's better to exit the while loop when the buffer is full (_buffer_size > ESP3D_SERIAL_BUFFER_SIZE).",
            "state": "open",
            "created_at": "2025-03-10T18:30:06+00:00",
            "updated_at": "2025-03-11T22:43:17+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1077",
            "is_pr": false,
            "labels": [
              "bug",
              "Waiting for details",
              "ESP3D 3.X",
              "ESP32-S2"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 1074,
            "title": "[BUG-FIX]  The problem with the SSD1306wire library and its solution (add to the main code)",
            "body": "**Describe the bug**\n\n<!--A clear and concise description of what the bug is.-->\n\nThe problem is with compiling the code for the esp32-c3 with the enabled oled ssd1306 wire feature in the PlatformIO.\n\nI was able to fix the code myself, and therefore I will attach a file with the corrected .cpp code. The rest can be taken from the original library.\n\n`\n#include <Wire.h>\n\n#include \"SSD1306wire.h\"\n\n\n\ntypedef void prog_void;\ntypedef char prog_char;\ntypedef unsigned char prog_uchar;\ntypedef char prog_int8_t;\ntypedef unsigned char prog_uint8_t;\ntypedef short prog_int16_t;\ntypedef unsigned short prog_uint16_t;\ntypedef long prog_int32_t;\ntypedef unsigned long prog_uint32_t;\n\n#define PROGMEM\n#define PGM_P        const char *\n#define PGM_VOID_P   const void *\n#define PSTR(s)      (s)\n#define _SFR_BYTE(n) (n)\n\n#define pgm_read_byte(addr) (*(const unsigned char *)(addr))\n#define pgm_read_word(addr)           \\\n  ({                                  \\\n    typeof(addr) _addr = (addr);      \\\n    *(const unsigned short *)(_addr); \\\n  })\n#define pgm_read_dword(addr)         \\\n  ({                                 \\\n    typeof(addr) _addr = (addr);     \\\n    *(const unsigned long *)(_addr); \\\n  })\n#define pgm_read_float(addr)     \\\n  ({                             \\\n    typeof(addr) _addr = (addr); \\\n    *(const float *)(_addr);     \\\n  })\n#define pgm_read_ptr(addr)       \\\n  ({                             \\\n    typeof(addr) _addr = (addr); \\\n    *(void *const *)(_addr);     \\\n  })\n\n#define pgm_get_far_address(x) ((uint32_t)(&(x)))\n\n#define pgm_read_byte_near(addr)  pgm_read_byte(addr)\n#define pgm_read_word_near(addr)  pgm_read_word(addr)\n#define pgm_read_dword_near(addr) pgm_read_dword(addr)\n#define pgm_read_float_near(addr) pgm_read_float(addr)\n#define pgm_read_ptr_near(addr)   pgm_read_ptr(addr)\n#define pgm_read_byte_far(addr)   pgm_read_byte(addr)\n#define pgm_read_word_far(addr)   pgm_read_word(addr)\n#define pgm_read_dword_far(addr)  pgm_read_dword(addr)\n#define pgm_read_float_far(addr)  pgm_read_float(addr)\n#define pgm_read_ptr_far(addr)    pgm_read_ptr(addr)\n\n#define memcmp_P      memcmp\n#define memccpy_P     memccpy\n#define memmem_P      memmem\n#define memcpy_P      memcpy\n#define strcpy_P      strcpy\n#define strncpy_P     strncpy\n#define strcat_P      strcat\n#define strncat_P     strncat\n#define strcmp_P      strcmp\n#define strncmp_P     strncmp\n#define strcasecmp_P  strcasecmp\n#define strncasecmp_P strncasecmp\n#define strlen_P      strlen\n#define strnlen_P     strnlen\n#define strstr_P      strstr\n#define printf_P      printf\n#define sprintf_P     sprintf\n#define snprintf_P    snprintf\n#define vsnprintf_P   vsnprintf\n\n\n\nvoid SSD1306wire::begin(const SSD1306wire_display* display, uint8_t i2c_addr) {\n    _i2c_addr = i2c_addr;\n    Wire.begin();\n    _max_columns = pgm_read_byte(&display->width);\n    _max_rows = pgm_read_byte(&display->height) >> 3;\n    const uint8_t* init_sequence = (const uint8_t*)pgm_read_word(&display->init_sequence);\n    uint8_t init_sequence_size = pgm_read_byte(&display->init_sequence_size);\n    Wire.beginTransmission(_i2c_addr);\n    Wire.write(SSD1306_COMMAND);\n    for(uint8_t i = 0; i < init_sequence_size; i++) {\n        WireSend(SSD1306_COMMAND, pgm_read_byte(init_sequence + i));\n    }\n    Wire.endTransmission();\n    setCursor(0, 0);\n}\n\n\nvoid SSD1306wire::set400kHz() {\n\tWire.setClock(400000);\n}\n\nsize_t SSD1306wire::write(uint8_t character) {\n\tif((_column >= _max_columns) || (_row >= _max_rows))\n\t\treturn 1;\n\tif(_font == 0)\n\t\treturn 1;\n\n\tuint8_t font_min_width = pgm_read_byte(_font);\n\tuint8_t font_rows = pgm_read_byte(_font + 1);\n\tuint8_t font_first_char = pgm_read_byte(_font + 2);\n\tuint8_t font_last_char = pgm_read_byte(_font + 3);\n\n\tuint8_t char_width = 0;\n\tconst uint8_t *char_offset = _font + 5 + font_last_char - font_first_char;\n\tif((character >= font_first_char) && (character <= font_last_char)) {\n\t\tchar_width = pgm_read_byte(_font + 4 + character - font_first_char) / font_rows;\n\t\tfor(uint8_t i = character - font_first_char; i > 0; --i) {\n\t\t\tchar_offset += pgm_read_byte(_font + 3 + i);\n\t\t}\n\t}\n\n\tuint8_t max_rows = _row + font_rows;\n\tif (max_rows > _max_rows)\n\t\tmax_rows = _max_rows;\n\n\tfor(uint8_t row = _row; row < max_rows; ++row) {\n\t\tSetColumn(_column);\n\t\tSetRow(row);\n\n\t\tuint8_t c;\n\t\tuint8_t i = 0;\n\t\tWire.beginTransmission(_i2c_addr);\n\t\tWire.write(SSD1306_DATA);\n\t\twhile(i < char_width) {\n\t\t\tif (i + _column >= _max_columns)\n\t\t\t\tbreak;\n\t\t\tc = pgm_read_byte(char_offset + i);\n\t\t\tif(_inv_font) c = ~ c;\n\t\t\tWire.write(c);\n\t\t\t++i;\n\t\t}\n\t\tc = 0;\n\t\tif(_inv_font) c = ~ c;\n\t\twhile(i < font_min_width) {\n\t\t\tif (i + _column >= _max_columns)\n\t\t\t\tbreak;\n\t\t\tWire.write(c);\n\t\t\t++i;\n\t\t}\n\t\tWire.endTransmission();\n\n\t\tchar_offset += char_width;\n\t}\n\n\tif(char_width < font_min_width)\n\t\tchar_width = font_min_width;\n\t_column += char_width;\n\tif(_column > _max_columns)\n\t\t_column = _max_columns;\n\n\treturn 1;\n}\n\nsize_t SSD1306wire::write(const uint8_t *buffer, size_t size) {\n\tsize_t outchars = 0;\n\n\tfor(int c = 0; c < size; c++) {\n\t\toutchars += write(*(buffer + c));\n\t}\n\n\treturn outchars;\n}\n\nvoid SSD1306wire::syncCursor() {\n\tif(_column < _max_columns)\n\t\tSetColumn(_column);\n\tif(_row < _max_rows)\n\t\tSetRow(_row);\n}\n\nvoid SSD1306wire::setPower(bool on) {\n\tWire.beginTransmission(_i2c_addr);\n\tWire.write(SSD1306_COMMAND);\n\tWire.write(on ? 0xAF : 0xAE);\n\tWire.endTransmission();\n}\n\nvoid SSD1306wire::setContrast(uint8_t contrast) {\n\tWire.beginTransmission(_i2c_addr);\n\tWire.write(SSD1306_COMMAND);\n\tWire.write(0x81);\n\tWire.write(contrast);\n\tWire.endTransmission();\n}\n\nvoid SSD1306wire::inverseDisplay(bool inverse) {\n\tWire.beginTransmission(_i2c_addr);\n\tWire.write(SSD1306_COMMAND);\n\tWire.write(inverse ? 0xA7 : 0xA6);\n\tWire.endTransmission();\n}\n\nvoid SSD1306wire::SetColumn(uint8_t column) {\n\tWire.beginTransmission(_i2c_addr);\n\tWire.write(SSD1306_COMMAND);\n\tWire.write(0x00 | (column & 0x0F));\n\tWire.write(0x10 | (column >> 4));\n\tWire.endTransmission();\n}\n\nvoid SSD1306wire::SetRow(uint8_t row) {\n\tWire.beginTransmission(_i2c_addr);\n\tWire.write(SSD1306_COMMAND);\n\tWire.write(0xB0 | row);\n\tWire.endTransmission();\n}\n\nvoid SSD1306wire::clear() {\n\tSetColumn(0);\n\n\tfor(uint8_t row = 0; row < _max_rows; ++row) {\n\t\tSetRow(row);\n\n\t\tWire.beginTransmission(_i2c_addr);\n\t\tWire.write(SSD1306_DATA);\n\t\tfor(uint8_t col = 0; col < _max_columns; ++col) {\n\t\t\tWireSend(SSD1306_DATA, 0);\n\t\t}\n\t\tWire.endTransmission();\n\t}\n\n\tsetCursorForce(0, 0);\n}\n\nvoid SSD1306wire::clearToEOL() {\n\tif((_column >= _max_columns) || (_row >= _max_rows))\n\t\treturn;\n\tif(_font == 0)\n\t\treturn;\n\n\tuint8_t max_rows = _row + pgm_read_byte(_font + 1);\n\tif (max_rows > _max_rows)\n\t\tmax_rows = _max_rows;\n\n\tuint8_t c = 0;\n\tif(_inv_font) c = ~ c;\n\n\tfor(uint8_t row = _row; row < max_rows; ++row) {\n\t\tSetColumn(_column);\n\t\tSetRow(row);\n\n\t\tWire.beginTransmission(_i2c_addr);\n\t\tWire.write(SSD1306_DATA);\n\t\tfor(uint8_t col = _column; col < _max_columns; ++col) {\n\t\t\tWireSend(SSD1306_DATA, c);\n\t\t}\n\t\tWire.endTransmission();\n\t}\n\t_column = _max_columns;\n}\n\nvoid SSD1306wire::WireSend(uint8_t type, uint8_t value) {\n\tif(Wire.write(value) == 0) {\n\t\tWire.endTransmission();\n\t\tWire.beginTransmission(_i2c_addr);\n\t\tWire.write(type);\n\t\tWire.write(value);\n\t}\n}`\n\nAhem, I'm sorry, the code can't be inserted otherwise........",
            "state": "open",
            "created_at": "2025-03-04T18:34:57+00:00",
            "updated_at": "2025-03-10T04:14:00+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1074",
            "is_pr": false,
            "labels": [
              "bug",
              "Waiting for details",
              "Cannot Duplicate",
              "ESP32-C3"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 1058,
            "title": "[FEATURE REQUEST]Waveshare ESP32-S3 1.47inch Display Development Board, 172\u00d7320, Dual-Core Processor, With RGB LED",
            "body": "This board as screen / sd card / 8 PSRAM and 16MB Flash\r\nWaveshare ESP32-S3 1.47inch Display Development Board, 172\u00d7320, Dual-Core Processor, Supports WiFi & Bluetooth, With RGB LED\r\nhttps://www.waveshare.com/esp32-s3-lcd-1.47.htm\r\nhttps://www.waveshare.com/wiki/ESP32-S3-LCD-1.47\r\nI think if the USB port is the OTG port it would be the perfect device to stream GCODE and be the reference board for it",
            "state": "open",
            "created_at": "2024-10-21T04:51:29+00:00",
            "updated_at": "2024-11-25T01:04:06+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1058",
            "is_pr": false,
            "labels": [
              "Feature request",
              "On Hold",
              "ESP3D 3.X"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 795,
            "title": "[TODO]\u2611Code refactoring plan",
            "body": "There several area of refactoring in the code they are currently not mandatory but need to be addressed one day, so the purpose it to track them here as they can be a task out of current development because they won't change features but improve code itself and may be make it more robust:\r\n\r\n* <s>Change GenLinkedList to vector</s>:+1:\r\n* Implement better file encapsulation class to cover any new file system and any new arch\r\n* Web server abstraction layer to allow to update smoothly to another solution\r\n* Add https support once there is an HTTP server that is implemented that support it \r\n* Implement Wifi HAL and Ethernet HAL to avoid any arch def out of the HAL, and only limite the def to the features themself\r\n* Implement a target HAL to centralize all difference need by specific FW in one file or directory\r\n* <s>Refactoring the dispatch commands flow to make it more clear and remove unnecessary functions, use the message format of ESP3D-TFT</s>:+1:\r\n* <s>Request authentication of telnet / websocket only once per session not for each commands</s>:+1: \r\n* TBD\r\n\r\n\r\nAnyone willing to contribute is welcome of course \ud83d\ude38 in that case open discussion board for the targeted topic first to discussing, status of implementation will be here anyways",
            "state": "open",
            "created_at": "2022-07-28T00:34:00+00:00",
            "updated_at": "2024-03-04T04:49:46+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/795",
            "is_pr": false,
            "labels": [
              "Help Welcome",
              "Code Simplification",
              "ESP3D 3.X",
              "Planned"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 575,
            "title": "\u23f8\ufe0f[FEATURE REQUEST]\ud83e\udd84Use better serial protocol communication",
            "body": "Current protocol between printer and ESP3D use raw serial which is ok for GCODE communication but no really efficient for file transfer\r\nMore over if some output come from printer board due to auto send it bring some trouble on file transfer which is already slow\r\n\r\nCurrent MKS protocol encapsulate each command in a frame with specific header,  it also use 2 additionnal pins for notification/ack ,and different headers for GCODE / File transfer / Error, which make coexistance easier\r\nThis protocol allow 110KB/S transfer vs 0.4KB/S M28/M29 transfer and handle GCODE even during transfer.\r\nThat said current MKS protocol miss 2 things:    \r\n* CRC to ensure data are correct\r\n* resend process in case of corrupted data\r\n\r\nI think add a CRC32 should improve reliability and will only use couple of byte on each frame, and calculation should not affect too much performances.  if done when data is received\r\nBased on this crc, if any error happen then do a resend, if more than 2 resend is needed  on same packet, then automaticaly ask for decreasing baudrate to do more secure transfer. \r\n\r\nThis would need to add some code in Printer FW  but will ensure communication for file transfer as well as commands \r\nThis will be between esp3d and printer like on MKS Wifi so external progam won't be affected.\r\n\r\nI am considering to write a library that could be used to hook the serial wifi port, but this also means need a dedicated wifi port like BTT do for board or TFT or an available UART port  \r\nIf Serial port  is same as USB one, it won't work (e.g: Mega/Ramps and aux 1),  so I need to see if can handle raw serial in same time or consider it as limitation= no support of shared solution, may add custom GCODE  to switch from one mode to another ?\r\nIn addition it need 2 additional pins available.\r\n\r\nThis would allow to remove the need of supporting the slow and unreliable M28/M29 protocol but bring more work on ESP3D part by adding a daughter library / Serial protocol accross FW  (Repetier / Marlin / Smoothieware/ TBD...)\r\n\r\nAny feedback /comment is welcome  \r\n\r\n",
            "state": "open",
            "created_at": "2021-02-01T12:13:07+00:00",
            "updated_at": "2024-03-06T00:14:48+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/575",
            "is_pr": false,
            "labels": [
              "Feature request",
              "Feedback Welcome",
              "ESP3D 3.X"
            ],
            "priority": "normal",
            "assignee": "luc-github"
          },
          {
            "number": 568,
            "title": "[FEATURE REQUEST]\ud83e\udd84USB Disk support using CH376S chip",
            "body": "Global FS support Flash and SD, now let's try to add USB Flash disk/key using SPI and CH376s Chip\r\n\r\nThis library looks very promising https://github.com/djuseeq/Ch376msc\r\ne\r\nChip is using 3.3 by default but need 5V to power the USB disk\r\nIt need to test features , if work as expected then need to implement an abstraction layer for the USB FS and  add it to the global FS",
            "state": "open",
            "created_at": "2021-01-24T19:14:07+00:00",
            "updated_at": "2024-10-28T12:10:03+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/568",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP3D 3.X",
              "Planned",
              "USB"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 243,
            "title": "[FEATURE REQUEST]\ud83e\udd84GCODE Streamer Host definition for 3.X",
            "body": "Time to define what host feature will be:\r\nBasic description\r\n1 - Read Gcode from SD \r\n2- Send GCODE to printer FW via Serial\r\n3 - Wait for ack\r\n4 - if ack go to 1 / if error go to 2\r\n\r\nNow need to clarify each part : \r\n* Point 1  is no issue so far: just store file name / currentline \r\n* Point 2 need more elaborate:\r\n1 - add Line numbering in command\r\n`N1 G28`\r\nReset the line numbering is M110 N0 on Repetier / Marlin / Smoothiware\r\n2 - add command checksum for safety (all command char are XOR+*+checksum calculated)\r\n`N20 M105*20`\r\n* Point4 : ack always use ok +line number \r\n`ok 20`\r\nif error on line number or checksum you get\r\n`resend 20`\r\n\r\nNot sure if special command need to be handled (like @pause) right now as it is not a host that have direct UI, but will be when Oled Screen is enabled as well as rotary encoder is supported.\r\n\r\nOne command is key: Emergency stop, to stop sending commands ans stop printer FW\r\n",
            "state": "open",
            "created_at": "2018-07-14T13:24:33+00:00",
            "updated_at": "2024-06-01T03:17:55+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/243",
            "is_pr": false,
            "labels": [
              "Feature request",
              "Feedback Welcome",
              "ESP3D 3.X"
            ],
            "priority": "normal",
            "assignee": null
          }
        ]
      }
    ],
    "contributors": [
      {
        "login": "luc-github",
        "contributions": 456,
        "url": "https://github.com/luc-github"
      },
      {
        "login": "allcontributors[bot]",
        "contributions": 26,
        "url": "https://github.com/apps/allcontributors"
      },
      {
        "login": "atsju",
        "contributions": 13,
        "url": "https://github.com/atsju"
      },
      {
        "login": "dependabot[bot]",
        "contributions": 9,
        "url": "https://github.com/apps/dependabot"
      },
      {
        "login": "j0hnlittle",
        "contributions": 7,
        "url": "https://github.com/j0hnlittle"
      },
      {
        "login": "AustinSaintAubin",
        "contributions": 3,
        "url": "https://github.com/AustinSaintAubin"
      },
      {
        "login": "alhirzel",
        "contributions": 1,
        "url": "https://github.com/alhirzel"
      },
      {
        "login": "KingBain",
        "contributions": 1,
        "url": "https://github.com/KingBain"
      },
      {
        "login": "A7F",
        "contributions": 1,
        "url": "https://github.com/A7F"
      },
      {
        "login": "gitter-badger",
        "contributions": 1,
        "url": "https://github.com/gitter-badger"
      },
      {
        "login": "coliss86",
        "contributions": 1,
        "url": "https://github.com/coliss86"
      },
      {
        "login": "fape",
        "contributions": 1,
        "url": "https://github.com/fape"
      },
      {
        "login": "jschwalbe",
        "contributions": 1,
        "url": "https://github.com/jschwalbe"
      }
    ],
    "activity": {
      "recent_commits": [
        {
          "sha": "24924cd",
          "message": "Update README.md\n\nSigned-off-by: Luc <8822552+luc-github@users.noreply.github.com>",
          "author": "Luc",
          "date": "2025-02-23T11:25:53+00:00"
        },
        {
          "sha": "2530634",
          "message": "Update README.md",
          "author": "Luc",
          "date": "2024-05-30T00:07:00+00:00"
        },
        {
          "sha": "cb9021f",
          "message": "s/athentication/authentication/ (#1019)\n\nSigned-off-by: Alex Hirzel <alex@hirzel.us>",
          "author": "Alex Hirzel",
          "date": "2024-04-28T14:26:35+00:00"
        },
        {
          "sha": "e211c0e",
          "message": "Update README.md",
          "author": "Luc",
          "date": "2024-04-28T14:24:41+00:00"
        },
        {
          "sha": "4cab149",
          "message": "Bump version for release",
          "author": "Luc",
          "date": "2024-03-24T02:52:00+00:00"
        },
        {
          "sha": "8cff8c4",
          "message": "Update the typo in name that make the exclude not working",
          "author": "Luc",
          "date": "2024-03-24T02:48:12+00:00"
        },
        {
          "sha": "344945d",
          "message": "Update README.md\n\nSigned-off-by: Luc <8822552+luc-github@users.noreply.github.com>",
          "author": "Luc",
          "date": "2024-03-23T01:18:38+00:00"
        },
        {
          "sha": "590626f",
          "message": "Fix typo in platformio\n\nThanks @ilko-k for pointing this out",
          "author": "Luc",
          "date": "2024-03-22T02:23:30+00:00"
        },
        {
          "sha": "2b5981b",
          "message": "docs: add Levak as a contributor for code, and bug (#1007)\n\n* docs: update README.md [skip ci]\r\n\r\n* docs: update .all-contributorsrc [skip ci]\r\n\r\n---------\r\n\r\nCo-authored-by: allcontributors[bot] <46447321+allcontributors[bot]@users.noreply.github.com>",
          "author": "allcontributors[bot]",
          "date": "2024-03-04T01:35:23+00:00"
        },
        {
          "sha": "4efbb7b",
          "message": "docs: add rondlh as a contributor for code, and bug (#997)\n\n* docs: update README.md [skip ci]\r\n\r\n* docs: update .all-contributorsrc [skip ci]\r\n\r\n---------\r\n\r\nCo-authored-by: allcontributors[bot] <46447321+allcontributors[bot]@users.noreply.github.com>",
          "author": "allcontributors[bot]",
          "date": "2024-02-05T06:13:30+00:00"
        }
      ],
      "commit_activity": [
        {
          "week": "2024-03-17T00:00:00+00:00",
          "total": 2,
          "days": [
            0,
            0,
            0,
            0,
            0,
            1,
            1
          ]
        },
        {
          "week": "2024-03-24T00:00:00+00:00",
          "total": 2,
          "days": [
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-03-31T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-04-07T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-04-14T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-04-21T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-04-28T00:00:00+00:00",
          "total": 2,
          "days": [
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-05T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-12T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-19T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-26T00:00:00+00:00",
          "total": 1,
          "days": [
            0,
            0,
            0,
            0,
            1,
            0,
            0
          ]
        },
        {
          "week": "2024-06-02T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-09T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-16T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-23T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-30T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-07T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-14T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-21T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-28T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-04T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-11T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-18T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-25T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-01T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-08T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-15T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-22T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-29T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-06T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-13T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-20T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-27T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-11-03T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-11-10T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-11-17T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-11-24T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-12-01T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-12-08T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-12-15T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-12-22T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-12-29T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-01-05T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-01-12T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-01-19T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-01-26T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-02-02T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-02-09T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-02-16T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-02-23T00:00:00+00:00",
          "total": 1,
          "days": [
            1,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-03-02T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2025-03-09T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      ]
    },
    "statistics": {
      "size": 134823,
      "stars": 1812,
      "forks": 476,
      "open_issues": 7,
      "watchers": 1812,
      "default_branch": "2.1.x",
      "license": "GNU General Public License v3.0"
    }
  }
}