{
  "timestamp": 1731632403.6234908,
  "data": {
    "name": "ESP3D",
    "type": "main",
    "description": "FW for ESP8266/ESP8285/ESP32 used with 3D printer",
    "url": "https://github.com/luc-github/ESP3D",
    "language": "C++",
    "created_at": "2015-04-16T13:47:44+00:00",
    "updated_at": "2024-11-13T16:12:19+00:00",
    "branches": [
      {
        "name": "2.1.x",
        "label": "Production",
        "is_production": true,
        "last_commit": {
          "sha": "2530634",
          "message": "Update README.md",
          "author": "Luc",
          "date": "2024-05-30T00:07:00+00:00"
        },
        "protected": false,
        "issues": [
          {
            "number": 1059,
            "title": "[Question]How to Send G-code Commands via HTTP API in ESP3D Version 2.x",
            "body": "Hello,\r\nI\u2019m using ESP3D version 2.x and want to send G-code commands like `G28 Z` and `M114 `through the HTTP API. I've tried requests in the format `http://<IP>/command?cmd=M114`, but I keep getting an `Invalid command` error. Could you clarify the correct way to format these requests for version 2.x? Also, if a password is needed, how do I set and include it in the requests?\r\n\r\nThank you for your help!",
            "state": "open",
            "created_at": "2024-10-30T04:21:33+00:00",
            "updated_at": "2024-10-31T14:43:27+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1059",
            "is_pr": false,
            "labels": [
              "question"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 1058,
            "title": "[FEATURE REQUEST]Waveshare ESP32-S3 1.47inch Display Development Board, 172\u00d7320, Dual-Core Processor, With RGB LED",
            "body": "This board as screen / sd card / 8 PSRAM and 16MB Flash\r\nWaveshare ESP32-S3 1.47inch Display Development Board, 172\u00d7320, Dual-Core Processor, Supports WiFi & Bluetooth, With RGB LED\r\nhttps://www.waveshare.com/esp32-s3-lcd-1.47.htm\r\nhttps://www.waveshare.com/wiki/ESP32-S3-LCD-1.47\r\nI think if the USB port is the OTG port it would be the perfect device to stream GCODE and be the reference board for it",
            "state": "open",
            "created_at": "2024-10-21T04:51:29+00:00",
            "updated_at": "2024-10-21T04:51:29+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1058",
            "is_pr": false,
            "labels": [
              "Feature request"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 1057,
            "title": "[FEATURE REQUEST]Add support for TTGO T-Lite W5500 ESP32 with SSD1306 ",
            "body": "Add support for TTGO T-Lite W5500 ESP32 Main Chip SSD1306 0.96 Inch Oled Type-c Usb Programming Development Board\r\n\r\nEthernet support is ready but pinout for TFT need to be documented and tested",
            "state": "open",
            "created_at": "2024-10-21T04:39:58+00:00",
            "updated_at": "2024-10-21T04:39:58+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1057",
            "is_pr": false,
            "labels": [
              "Feature request"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 1056,
            "title": "[FEATURE REQUEST]Add ADXL345 accelerometer for input shaping",
            "body": "If it is possible to add an adxl345 accelerometer (even just among the plugins) to calculate the resonant frequencies of the printer to be inserted in the input shaping parameter",
            "state": "open",
            "created_at": "2024-10-20T20:58:03+00:00",
            "updated_at": "2024-10-21T01:22:20+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1056",
            "is_pr": false,
            "labels": [
              "Feature request"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 955,
            "title": "[FEATURE REQUEST]\ud83e\udd84Change ESP_DIRECT_SD to ESP_ONLY_SD for consistency",
            "body": "in configuration.h\r\n```\r\n/* SD card connection\r\n* ESP_NO_SD //(default)\r\n* ESP_DIRECT_SD //Only your ESP board is connected to SDCard\r\n* ESP_SHARED_SD //Printer SD Card is also connected to ESP3D\r\n* Does your system has SD card and how it is connected to your ESP3D\r\n*/\r\n```\r\nESP_DIRECT_SD seems confusing for users and is often used when ESP_SHARED_SD should be used, the configurator must be updated also\r\n",
            "state": "open",
            "created_at": "2023-10-12T01:00:43+00:00",
            "updated_at": "2024-05-16T12:44:09+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/955",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP-3.X",
              "Planned",
              "SD Card"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 891,
            "title": "[FEATURE REQUEST]\ud83e\udd84Add discord Notification",
            "body": "the APi is described  here : https://dev.to/oskarcodes/send-automated-discord-messages-through-webhooks-using-javascript-1p01\r\nand here : https://gist.github.com/Birdie0/78ee79402a4301b1faf412ab5f1cdcf9",
            "state": "open",
            "created_at": "2023-02-22T13:17:35+00:00",
            "updated_at": "2024-03-04T04:40:50+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/891",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP-3.X"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 888,
            "title": "[FEATURE REQUEST]\ud83e\udd84WhatsApp Notification",
            "body": "How to do is here https://www.callmebot.com/blog/free-api-whatsapp-messages/ - it is free and it use same way as others - so it is easy to implement",
            "state": "open",
            "created_at": "2023-02-20T06:57:26+00:00",
            "updated_at": "2024-06-01T05:42:16+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/888",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP-3.X"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 795,
            "title": "[TODO]\u2611Code refactoring plan",
            "body": "There several area of refactoring in the code they are currently not mandatory but need to be addressed one day, so the purpose it to track them here as they can be a task out of current development because they won't change features but improve code itself and may be make it more robust:\r\n\r\n* <s>Change GenLinkedList to vector</s>:+1:\r\n* Implement better file encapsulation class to cover any new file system and any new arch\r\n* Web server abstraction layer to allow to update smoothly to another solution\r\n* Add https support once there is an HTTP server that is implemented that support it \r\n* Implement Wifi HAL and Ethernet HAL to avoid any arch def out of the HAL, and only limite the def to the features themself\r\n* Implement a target HAL to centralize all difference need by specific FW in one file or directory\r\n* <s>Refactoring the dispatch commands flow to make it more clear and remove unnecessary functions, use the message format of ESP3D-TFT</s>:+1:\r\n* <s>Request authentication of telnet / websocket only once per session not for each commands</s>:+1: \r\n* TBD\r\n\r\n\r\nAnyone willing to contribute is welcome of course \ud83d\ude38 in that case open discussion board for the targeted topic first to discussing, status of implementation will be here anyways",
            "state": "open",
            "created_at": "2022-07-28T00:34:00+00:00",
            "updated_at": "2024-03-04T04:49:46+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/795",
            "is_pr": false,
            "labels": [
              "Help Welcome",
              "Code Simplification",
              "ESP-3.X",
              "Planned"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 726,
            "title": "[FEATURE REQUEST]\ud83e\udd84Notification using custom webhook ",
            "body": "as suggested by @cyberiano https://github.com/luc-github/ESP3D/pull/708#issuecomment-1047456970\r\n\r\nthe issue is to fit all data in 3 slots : (not including message content)\r\nToken 1 = 63 chars (hidden in settings)\r\nToken 2 = 63 chars (hidden in settings)\r\nToken extra = 128 chars fully visible\r\n\r\nalso what the AUTO_NOTIFICATION behaviour should do with such notification ? should be disabled ?\r\nor need to change the content of\r\n\r\n#define NOTIFICATION_ESP_ONLINE \"Hi, %ESP_NAME% is now online at %ESP_IP%\"\r\nwhich mean the webhook is actually hardcoded which I would like to avoid as much as possible\r\n\r\nAnother possibility would be to allow more variables in message and also use [ESP600] to define id and value\r\nlike `[ESP600]ID=msg MSG=Hi, %ESP_NAME% is now online at %ESP_IP%`\r\nanother possibility would be to allow template message file on FS and use it  if present \r\n* autonotif.tpl \r\n",
            "state": "open",
            "created_at": "2022-02-28T05:28:21+00:00",
            "updated_at": "2024-03-06T00:13:58+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/726",
            "is_pr": false,
            "labels": [
              "Feature request"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 576,
            "title": "[BenchMark]Web upload / Web Download on different FS and platform",
            "body": "I think it would be very informative to bench the speed of upload / download a file using FTP / WebDav / Webserver\r\nto LocalFS / SD  on ESP32 and ESP8266\r\nusing MCVE to be sure the comparaison is correct\r\n\r\nTarget | Speed KB/S | Note \r\n-|-|- \r\nESP32 + WEBSERVER + FAT|56.01 | \r\nESP32 + WEBSERVER + LITTLEFS|59.60 | \r\nESP8266 + WEBSERVER + LITTLEFS| | \r\nESP32 + WEBSERVER + SD native|75.06 | \r\nESP8266 + WEBSERVER + SD native| | \r\nESP32 + WEBSERVER + SD Fat|101.9 ~122.4 | SDFAT 2.1.2\r\nESP8266 + WEBSERVER + SD Fat| | \r\nESP32 + WEBSERVER + SDIO| | \r\nESP8266 + WEBSERVER + SDIO| | \r\nESP32 + WEBDAV+ LITTLEFS| | \r\nESP8266 + WEBDAV+ LITTLEFS| | \r\nESP32 + WEBDAV+ SD native| | \r\nESP8266 + WEBDAV+ SD native| | \r\nESP32 + WEBDAV+ SD Fat| | \r\nESP8266 + WEBDAV+ SD Fat| | \r\nESP32 + WEBDAV+ SDIO| | \r\nESP8266 + WEBDAV+ SDIO| | \r\nESP32 + FTP+ LITTLEFS| | \r\nESP8266 + FTP+ LITTLEFS| | \r\nESP32 + FTP+ SD native| | \r\nESP8266 + FTP+ SD native| | \r\nESP32 + FTP+ SD Fat| | \r\nESP8266 + FTP+ SD Fat| | \r\nESP32 + FTP+ SDIO| | \r\nESP8266 + FTP+ SDIO| | \r\n\r\nOthers FW:\r\n\r\nFW | Target | Speed KB/S | Note \r\n-|-|-|- \r\ngrblHAL | ESP32 + FatFS + SDCard + WebDAV|300~350| \r\ngrblHAL | iMXRT1062 (Teensy4) + FatFS + SDCard + WebDAV|1127| Ethernet\r\ngrblHAL | STM32F7xx + FatFS + SDCard + WebDAV|350| Ethernet\r\n\r\nAdding `with PSRAM` could also be a thing to check on ESP32\r\n\r\nOnce done need to compare with speed in ESP3D / ESP3DLib and GRBL_ESP32 to see what must be improved and how\r\nThis is based on feedback ESP32 WebServer upload is very slow compare to ESP8266 \r\n\r\nUsing any asyncwebserver / external webserver is not the current target so it is out of scope - the goal is to do a status of current situation to plan improvements / changes",
            "state": "open",
            "created_at": "2021-02-03T11:37:13+00:00",
            "updated_at": "2022-08-29T03:50:43+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/576",
            "is_pr": false,
            "labels": [
              "Help Welcome",
              "Compatibility",
              "Documentation",
              "Testing",
              "ESP8266",
              "ESP32",
              "Planned"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 575,
            "title": "\u23f8\ufe0f[FEATURE REQUEST]\ud83e\udd84Use better serial protocol communication",
            "body": "Current protocol between printer and ESP3D use raw serial which is ok for GCODE communication but no really efficient for file transfer\r\nMore over if some output come from printer board due to auto send it bring some trouble on file transfer which is already slow\r\n\r\nCurrent MKS protocol encapsulate each command in a frame with specific header,  it also use 2 additionnal pins for notification/ack ,and different headers for GCODE / File transfer / Error, which make coexistance easier\r\nThis protocol allow 110KB/S transfer vs 0.4KB/S M28/M29 transfer and handle GCODE even during transfer.\r\nThat said current MKS protocol miss 2 things:    \r\n* CRC to ensure data are correct\r\n* resend process in case of corrupted data\r\n\r\nI think add a CRC32 should improve reliability and will only use couple of byte on each frame, and calculation should not affect too much performances.  if done when data is received\r\nBased on this crc, if any error happen then do a resend, if more than 2 resend is needed  on same packet, then automaticaly ask for decreasing baudrate to do more secure transfer. \r\n\r\nThis would need to add some code in Printer FW  but will ensure communication for file transfer as well as commands \r\nThis will be between esp3d and printer like on MKS Wifi so external progam won't be affected.\r\n\r\nI am considering to write a library that could be used to hook the serial wifi port, but this also means need a dedicated wifi port like BTT do for board or TFT or an available UART port  \r\nIf Serial port  is same as USB one, it won't work (e.g: Mega/Ramps and aux 1),  so I need to see if can handle raw serial in same time or consider it as limitation= no support of shared solution, may add custom GCODE  to switch from one mode to another ?\r\nIn addition it need 2 additional pins available.\r\n\r\nThis would allow to remove the need of supporting the slow and unreliable M28/M29 protocol but bring more work on ESP3D part by adding a daughter library / Serial protocol accross FW  (Repetier / Marlin / Smoothieware/ TBD...)\r\n\r\nAny feedback /comment is welcome  \r\n\r\n",
            "state": "open",
            "created_at": "2021-02-01T12:13:07+00:00",
            "updated_at": "2024-03-06T00:14:48+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/575",
            "is_pr": false,
            "labels": [
              "Feature request",
              "Feedback Welcome",
              "ESP-3.X"
            ],
            "priority": "normal",
            "assignee": "luc-github"
          },
          {
            "number": 568,
            "title": "[FEATURE REQUEST]\ud83e\udd84USB Disk support using CH376S chip",
            "body": "Global FS support Flash and SD, now let's try to add USB Flash disk/key using SPI and CH376s Chip\r\n\r\nThis library looks very promising https://github.com/djuseeq/Ch376msc\r\ne\r\nChip is using 3.3 by default but need 5V to power the USB disk\r\nIt need to test features , if work as expected then need to implement an abstraction layer for the USB FS and  add it to the global FS",
            "state": "open",
            "created_at": "2021-01-24T19:14:07+00:00",
            "updated_at": "2024-10-28T12:10:03+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/568",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP-3.X",
              "Planned",
              "USB"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 376,
            "title": "[FEATURE REQUEST]\ud83e\udd84autodetection",
            "body": "Add some diagnostic/autodetect process for:\r\n* Baudrate\r\n* Fw printer and version\r\n* TBD",
            "state": "open",
            "created_at": "2019-09-24T07:53:09+00:00",
            "updated_at": "2024-03-06T00:17:01+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/376",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP-3.X",
              "Planned"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 243,
            "title": "[FEATURE REQUEST]\ud83e\udd84GCODE Streamer Host definition for 3.X",
            "body": "Time to define what host feature will be:\r\nBasic description\r\n1 - Read Gcode from SD \r\n2- Send GCODE to printer FW via Serial\r\n3 - Wait for ack\r\n4 - if ack go to 1 / if error go to 2\r\n\r\nNow need to clarify each part : \r\n* Point 1  is no issue so far: just store file name / currentline \r\n* Point 2 need more elaborate:\r\n1 - add Line numbering in command\r\n`N1 G28`\r\nReset the line numbering is M110 N0 on Repetier / Marlin / Smoothiware\r\n2 - add command checksum for safety (all command char are XOR+*+checksum calculated)\r\n`N20 M105*20`\r\n* Point4 : ack always use ok +line number \r\n`ok 20`\r\nif error on line number or checksum you get\r\n`resend 20`\r\n\r\nNot sure if special command need to be handled (like @pause) right now as it is not a host that have direct UI, but will be when Oled Screen is enabled as well as rotary encoder is supported.\r\n\r\nOne command is key: Emergency stop, to stop sending commands ans stop printer FW\r\n",
            "state": "open",
            "created_at": "2018-07-14T13:24:33+00:00",
            "updated_at": "2024-06-01T03:17:55+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/243",
            "is_pr": false,
            "labels": [
              "Feature request",
              "Feedback Welcome",
              "ESP-3.X"
            ],
            "priority": "normal",
            "assignee": null
          }
        ]
      },
      {
        "name": "3.0",
        "label": "Development",
        "is_production": false,
        "last_commit": {
          "sha": "ff3dff0",
          "message": "Update esp32_usb_serial.cpp",
          "author": "Luc",
          "date": "2024-11-04T21:11:02+00:00"
        },
        "protected": false,
        "issues": [
          {
            "number": 1059,
            "title": "[Question]How to Send G-code Commands via HTTP API in ESP3D Version 2.x",
            "body": "Hello,\r\nI\u2019m using ESP3D version 2.x and want to send G-code commands like `G28 Z` and `M114 `through the HTTP API. I've tried requests in the format `http://<IP>/command?cmd=M114`, but I keep getting an `Invalid command` error. Could you clarify the correct way to format these requests for version 2.x? Also, if a password is needed, how do I set and include it in the requests?\r\n\r\nThank you for your help!",
            "state": "open",
            "created_at": "2024-10-30T04:21:33+00:00",
            "updated_at": "2024-10-31T14:43:27+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1059",
            "is_pr": false,
            "labels": [
              "question"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 1058,
            "title": "[FEATURE REQUEST]Waveshare ESP32-S3 1.47inch Display Development Board, 172\u00d7320, Dual-Core Processor, With RGB LED",
            "body": "This board as screen / sd card / 8 PSRAM and 16MB Flash\r\nWaveshare ESP32-S3 1.47inch Display Development Board, 172\u00d7320, Dual-Core Processor, Supports WiFi & Bluetooth, With RGB LED\r\nhttps://www.waveshare.com/esp32-s3-lcd-1.47.htm\r\nhttps://www.waveshare.com/wiki/ESP32-S3-LCD-1.47\r\nI think if the USB port is the OTG port it would be the perfect device to stream GCODE and be the reference board for it",
            "state": "open",
            "created_at": "2024-10-21T04:51:29+00:00",
            "updated_at": "2024-10-21T04:51:29+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1058",
            "is_pr": false,
            "labels": [
              "Feature request"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 1057,
            "title": "[FEATURE REQUEST]Add support for TTGO T-Lite W5500 ESP32 with SSD1306 ",
            "body": "Add support for TTGO T-Lite W5500 ESP32 Main Chip SSD1306 0.96 Inch Oled Type-c Usb Programming Development Board\r\n\r\nEthernet support is ready but pinout for TFT need to be documented and tested",
            "state": "open",
            "created_at": "2024-10-21T04:39:58+00:00",
            "updated_at": "2024-10-21T04:39:58+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1057",
            "is_pr": false,
            "labels": [
              "Feature request"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 1056,
            "title": "[FEATURE REQUEST]Add ADXL345 accelerometer for input shaping",
            "body": "If it is possible to add an adxl345 accelerometer (even just among the plugins) to calculate the resonant frequencies of the printer to be inserted in the input shaping parameter",
            "state": "open",
            "created_at": "2024-10-20T20:58:03+00:00",
            "updated_at": "2024-10-21T01:22:20+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/1056",
            "is_pr": false,
            "labels": [
              "Feature request"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 955,
            "title": "[FEATURE REQUEST]\ud83e\udd84Change ESP_DIRECT_SD to ESP_ONLY_SD for consistency",
            "body": "in configuration.h\r\n```\r\n/* SD card connection\r\n* ESP_NO_SD //(default)\r\n* ESP_DIRECT_SD //Only your ESP board is connected to SDCard\r\n* ESP_SHARED_SD //Printer SD Card is also connected to ESP3D\r\n* Does your system has SD card and how it is connected to your ESP3D\r\n*/\r\n```\r\nESP_DIRECT_SD seems confusing for users and is often used when ESP_SHARED_SD should be used, the configurator must be updated also\r\n",
            "state": "open",
            "created_at": "2023-10-12T01:00:43+00:00",
            "updated_at": "2024-05-16T12:44:09+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/955",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP-3.X",
              "Planned",
              "SD Card"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 891,
            "title": "[FEATURE REQUEST]\ud83e\udd84Add discord Notification",
            "body": "the APi is described  here : https://dev.to/oskarcodes/send-automated-discord-messages-through-webhooks-using-javascript-1p01\r\nand here : https://gist.github.com/Birdie0/78ee79402a4301b1faf412ab5f1cdcf9",
            "state": "open",
            "created_at": "2023-02-22T13:17:35+00:00",
            "updated_at": "2024-03-04T04:40:50+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/891",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP-3.X"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 888,
            "title": "[FEATURE REQUEST]\ud83e\udd84WhatsApp Notification",
            "body": "How to do is here https://www.callmebot.com/blog/free-api-whatsapp-messages/ - it is free and it use same way as others - so it is easy to implement",
            "state": "open",
            "created_at": "2023-02-20T06:57:26+00:00",
            "updated_at": "2024-06-01T05:42:16+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/888",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP-3.X"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 795,
            "title": "[TODO]\u2611Code refactoring plan",
            "body": "There several area of refactoring in the code they are currently not mandatory but need to be addressed one day, so the purpose it to track them here as they can be a task out of current development because they won't change features but improve code itself and may be make it more robust:\r\n\r\n* <s>Change GenLinkedList to vector</s>:+1:\r\n* Implement better file encapsulation class to cover any new file system and any new arch\r\n* Web server abstraction layer to allow to update smoothly to another solution\r\n* Add https support once there is an HTTP server that is implemented that support it \r\n* Implement Wifi HAL and Ethernet HAL to avoid any arch def out of the HAL, and only limite the def to the features themself\r\n* Implement a target HAL to centralize all difference need by specific FW in one file or directory\r\n* <s>Refactoring the dispatch commands flow to make it more clear and remove unnecessary functions, use the message format of ESP3D-TFT</s>:+1:\r\n* <s>Request authentication of telnet / websocket only once per session not for each commands</s>:+1: \r\n* TBD\r\n\r\n\r\nAnyone willing to contribute is welcome of course \ud83d\ude38 in that case open discussion board for the targeted topic first to discussing, status of implementation will be here anyways",
            "state": "open",
            "created_at": "2022-07-28T00:34:00+00:00",
            "updated_at": "2024-03-04T04:49:46+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/795",
            "is_pr": false,
            "labels": [
              "Help Welcome",
              "Code Simplification",
              "ESP-3.X",
              "Planned"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 726,
            "title": "[FEATURE REQUEST]\ud83e\udd84Notification using custom webhook ",
            "body": "as suggested by @cyberiano https://github.com/luc-github/ESP3D/pull/708#issuecomment-1047456970\r\n\r\nthe issue is to fit all data in 3 slots : (not including message content)\r\nToken 1 = 63 chars (hidden in settings)\r\nToken 2 = 63 chars (hidden in settings)\r\nToken extra = 128 chars fully visible\r\n\r\nalso what the AUTO_NOTIFICATION behaviour should do with such notification ? should be disabled ?\r\nor need to change the content of\r\n\r\n#define NOTIFICATION_ESP_ONLINE \"Hi, %ESP_NAME% is now online at %ESP_IP%\"\r\nwhich mean the webhook is actually hardcoded which I would like to avoid as much as possible\r\n\r\nAnother possibility would be to allow more variables in message and also use [ESP600] to define id and value\r\nlike `[ESP600]ID=msg MSG=Hi, %ESP_NAME% is now online at %ESP_IP%`\r\nanother possibility would be to allow template message file on FS and use it  if present \r\n* autonotif.tpl \r\n",
            "state": "open",
            "created_at": "2022-02-28T05:28:21+00:00",
            "updated_at": "2024-03-06T00:13:58+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/726",
            "is_pr": false,
            "labels": [
              "Feature request"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 576,
            "title": "[BenchMark]Web upload / Web Download on different FS and platform",
            "body": "I think it would be very informative to bench the speed of upload / download a file using FTP / WebDav / Webserver\r\nto LocalFS / SD  on ESP32 and ESP8266\r\nusing MCVE to be sure the comparaison is correct\r\n\r\nTarget | Speed KB/S | Note \r\n-|-|- \r\nESP32 + WEBSERVER + FAT|56.01 | \r\nESP32 + WEBSERVER + LITTLEFS|59.60 | \r\nESP8266 + WEBSERVER + LITTLEFS| | \r\nESP32 + WEBSERVER + SD native|75.06 | \r\nESP8266 + WEBSERVER + SD native| | \r\nESP32 + WEBSERVER + SD Fat|101.9 ~122.4 | SDFAT 2.1.2\r\nESP8266 + WEBSERVER + SD Fat| | \r\nESP32 + WEBSERVER + SDIO| | \r\nESP8266 + WEBSERVER + SDIO| | \r\nESP32 + WEBDAV+ LITTLEFS| | \r\nESP8266 + WEBDAV+ LITTLEFS| | \r\nESP32 + WEBDAV+ SD native| | \r\nESP8266 + WEBDAV+ SD native| | \r\nESP32 + WEBDAV+ SD Fat| | \r\nESP8266 + WEBDAV+ SD Fat| | \r\nESP32 + WEBDAV+ SDIO| | \r\nESP8266 + WEBDAV+ SDIO| | \r\nESP32 + FTP+ LITTLEFS| | \r\nESP8266 + FTP+ LITTLEFS| | \r\nESP32 + FTP+ SD native| | \r\nESP8266 + FTP+ SD native| | \r\nESP32 + FTP+ SD Fat| | \r\nESP8266 + FTP+ SD Fat| | \r\nESP32 + FTP+ SDIO| | \r\nESP8266 + FTP+ SDIO| | \r\n\r\nOthers FW:\r\n\r\nFW | Target | Speed KB/S | Note \r\n-|-|-|- \r\ngrblHAL | ESP32 + FatFS + SDCard + WebDAV|300~350| \r\ngrblHAL | iMXRT1062 (Teensy4) + FatFS + SDCard + WebDAV|1127| Ethernet\r\ngrblHAL | STM32F7xx + FatFS + SDCard + WebDAV|350| Ethernet\r\n\r\nAdding `with PSRAM` could also be a thing to check on ESP32\r\n\r\nOnce done need to compare with speed in ESP3D / ESP3DLib and GRBL_ESP32 to see what must be improved and how\r\nThis is based on feedback ESP32 WebServer upload is very slow compare to ESP8266 \r\n\r\nUsing any asyncwebserver / external webserver is not the current target so it is out of scope - the goal is to do a status of current situation to plan improvements / changes",
            "state": "open",
            "created_at": "2021-02-03T11:37:13+00:00",
            "updated_at": "2022-08-29T03:50:43+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/576",
            "is_pr": false,
            "labels": [
              "Help Welcome",
              "Compatibility",
              "Documentation",
              "Testing",
              "ESP8266",
              "ESP32",
              "Planned"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 575,
            "title": "\u23f8\ufe0f[FEATURE REQUEST]\ud83e\udd84Use better serial protocol communication",
            "body": "Current protocol between printer and ESP3D use raw serial which is ok for GCODE communication but no really efficient for file transfer\r\nMore over if some output come from printer board due to auto send it bring some trouble on file transfer which is already slow\r\n\r\nCurrent MKS protocol encapsulate each command in a frame with specific header,  it also use 2 additionnal pins for notification/ack ,and different headers for GCODE / File transfer / Error, which make coexistance easier\r\nThis protocol allow 110KB/S transfer vs 0.4KB/S M28/M29 transfer and handle GCODE even during transfer.\r\nThat said current MKS protocol miss 2 things:    \r\n* CRC to ensure data are correct\r\n* resend process in case of corrupted data\r\n\r\nI think add a CRC32 should improve reliability and will only use couple of byte on each frame, and calculation should not affect too much performances.  if done when data is received\r\nBased on this crc, if any error happen then do a resend, if more than 2 resend is needed  on same packet, then automaticaly ask for decreasing baudrate to do more secure transfer. \r\n\r\nThis would need to add some code in Printer FW  but will ensure communication for file transfer as well as commands \r\nThis will be between esp3d and printer like on MKS Wifi so external progam won't be affected.\r\n\r\nI am considering to write a library that could be used to hook the serial wifi port, but this also means need a dedicated wifi port like BTT do for board or TFT or an available UART port  \r\nIf Serial port  is same as USB one, it won't work (e.g: Mega/Ramps and aux 1),  so I need to see if can handle raw serial in same time or consider it as limitation= no support of shared solution, may add custom GCODE  to switch from one mode to another ?\r\nIn addition it need 2 additional pins available.\r\n\r\nThis would allow to remove the need of supporting the slow and unreliable M28/M29 protocol but bring more work on ESP3D part by adding a daughter library / Serial protocol accross FW  (Repetier / Marlin / Smoothieware/ TBD...)\r\n\r\nAny feedback /comment is welcome  \r\n\r\n",
            "state": "open",
            "created_at": "2021-02-01T12:13:07+00:00",
            "updated_at": "2024-03-06T00:14:48+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/575",
            "is_pr": false,
            "labels": [
              "Feature request",
              "Feedback Welcome",
              "ESP-3.X"
            ],
            "priority": "normal",
            "assignee": "luc-github"
          },
          {
            "number": 568,
            "title": "[FEATURE REQUEST]\ud83e\udd84USB Disk support using CH376S chip",
            "body": "Global FS support Flash and SD, now let's try to add USB Flash disk/key using SPI and CH376s Chip\r\n\r\nThis library looks very promising https://github.com/djuseeq/Ch376msc\r\ne\r\nChip is using 3.3 by default but need 5V to power the USB disk\r\nIt need to test features , if work as expected then need to implement an abstraction layer for the USB FS and  add it to the global FS",
            "state": "open",
            "created_at": "2021-01-24T19:14:07+00:00",
            "updated_at": "2024-10-28T12:10:03+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/568",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP-3.X",
              "Planned",
              "USB"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 376,
            "title": "[FEATURE REQUEST]\ud83e\udd84autodetection",
            "body": "Add some diagnostic/autodetect process for:\r\n* Baudrate\r\n* Fw printer and version\r\n* TBD",
            "state": "open",
            "created_at": "2019-09-24T07:53:09+00:00",
            "updated_at": "2024-03-06T00:17:01+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/376",
            "is_pr": false,
            "labels": [
              "Feature request",
              "ESP-3.X",
              "Planned"
            ],
            "priority": "normal",
            "assignee": null
          },
          {
            "number": 243,
            "title": "[FEATURE REQUEST]\ud83e\udd84GCODE Streamer Host definition for 3.X",
            "body": "Time to define what host feature will be:\r\nBasic description\r\n1 - Read Gcode from SD \r\n2- Send GCODE to printer FW via Serial\r\n3 - Wait for ack\r\n4 - if ack go to 1 / if error go to 2\r\n\r\nNow need to clarify each part : \r\n* Point 1  is no issue so far: just store file name / currentline \r\n* Point 2 need more elaborate:\r\n1 - add Line numbering in command\r\n`N1 G28`\r\nReset the line numbering is M110 N0 on Repetier / Marlin / Smoothiware\r\n2 - add command checksum for safety (all command char are XOR+*+checksum calculated)\r\n`N20 M105*20`\r\n* Point4 : ack always use ok +line number \r\n`ok 20`\r\nif error on line number or checksum you get\r\n`resend 20`\r\n\r\nNot sure if special command need to be handled (like @pause) right now as it is not a host that have direct UI, but will be when Oled Screen is enabled as well as rotary encoder is supported.\r\n\r\nOne command is key: Emergency stop, to stop sending commands ans stop printer FW\r\n",
            "state": "open",
            "created_at": "2018-07-14T13:24:33+00:00",
            "updated_at": "2024-06-01T03:17:55+00:00",
            "closed_at": null,
            "url": "https://github.com/luc-github/ESP3D/issues/243",
            "is_pr": false,
            "labels": [
              "Feature request",
              "Feedback Welcome",
              "ESP-3.X"
            ],
            "priority": "normal",
            "assignee": null
          }
        ]
      }
    ],
    "contributors": [
      {
        "login": "luc-github",
        "contributions": 455,
        "url": "https://github.com/luc-github"
      },
      {
        "login": "allcontributors[bot]",
        "contributions": 26,
        "url": "https://github.com/apps/allcontributors"
      },
      {
        "login": "atsju",
        "contributions": 13,
        "url": "https://github.com/atsju"
      },
      {
        "login": "dependabot[bot]",
        "contributions": 9,
        "url": "https://github.com/apps/dependabot"
      },
      {
        "login": "j0hnlittle",
        "contributions": 7,
        "url": "https://github.com/j0hnlittle"
      },
      {
        "login": "AustinSaintAubin",
        "contributions": 3,
        "url": "https://github.com/AustinSaintAubin"
      },
      {
        "login": "alhirzel",
        "contributions": 1,
        "url": "https://github.com/alhirzel"
      },
      {
        "login": "KingBain",
        "contributions": 1,
        "url": "https://github.com/KingBain"
      },
      {
        "login": "A7F",
        "contributions": 1,
        "url": "https://github.com/A7F"
      },
      {
        "login": "gitter-badger",
        "contributions": 1,
        "url": "https://github.com/gitter-badger"
      },
      {
        "login": "coliss86",
        "contributions": 1,
        "url": "https://github.com/coliss86"
      },
      {
        "login": "fape",
        "contributions": 1,
        "url": "https://github.com/fape"
      },
      {
        "login": "jschwalbe",
        "contributions": 1,
        "url": "https://github.com/jschwalbe"
      }
    ],
    "activity": {
      "recent_commits": [
        {
          "sha": "2530634",
          "message": "Update README.md",
          "author": "Luc",
          "date": "2024-05-30T00:07:00+00:00"
        },
        {
          "sha": "cb9021f",
          "message": "s/athentication/authentication/ (#1019)\n\nSigned-off-by: Alex Hirzel <alex@hirzel.us>",
          "author": "Alex Hirzel",
          "date": "2024-04-28T14:26:35+00:00"
        },
        {
          "sha": "e211c0e",
          "message": "Update README.md",
          "author": "Luc",
          "date": "2024-04-28T14:24:41+00:00"
        },
        {
          "sha": "4cab149",
          "message": "Bump version for release",
          "author": "Luc",
          "date": "2024-03-24T02:52:00+00:00"
        },
        {
          "sha": "8cff8c4",
          "message": "Update the typo in name that make the exclude not working",
          "author": "Luc",
          "date": "2024-03-24T02:48:12+00:00"
        },
        {
          "sha": "344945d",
          "message": "Update README.md\n\nSigned-off-by: Luc <8822552+luc-github@users.noreply.github.com>",
          "author": "Luc",
          "date": "2024-03-23T01:18:38+00:00"
        },
        {
          "sha": "590626f",
          "message": "Fix typo in platformio\n\nThanks @ilko-k for pointing this out",
          "author": "Luc",
          "date": "2024-03-22T02:23:30+00:00"
        },
        {
          "sha": "2b5981b",
          "message": "docs: add Levak as a contributor for code, and bug (#1007)\n\n* docs: update README.md [skip ci]\r\n\r\n* docs: update .all-contributorsrc [skip ci]\r\n\r\n---------\r\n\r\nCo-authored-by: allcontributors[bot] <46447321+allcontributors[bot]@users.noreply.github.com>",
          "author": "allcontributors[bot]",
          "date": "2024-03-04T01:35:23+00:00"
        },
        {
          "sha": "4efbb7b",
          "message": "docs: add rondlh as a contributor for code, and bug (#997)\n\n* docs: update README.md [skip ci]\r\n\r\n* docs: update .all-contributorsrc [skip ci]\r\n\r\n---------\r\n\r\nCo-authored-by: allcontributors[bot] <46447321+allcontributors[bot]@users.noreply.github.com>",
          "author": "allcontributors[bot]",
          "date": "2024-02-05T06:13:30+00:00"
        },
        {
          "sha": "8360bf9",
          "message": "docs: add Engineer2Designer as a contributor for code, and bug (#990)\n\n* docs: update README.md [skip ci]\r\n\r\n* docs: update .all-contributorsrc [skip ci]\r\n\r\n---------\r\n\r\nCo-authored-by: allcontributors[bot] <46447321+allcontributors[bot]@users.noreply.github.com>",
          "author": "allcontributors[bot]",
          "date": "2024-01-04T09:07:27+00:00"
        }
      ],
      "commit_activity": [
        {
          "week": "2023-11-19T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2023-11-26T00:00:00+00:00",
          "total": 2,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            2
          ]
        },
        {
          "week": "2023-12-03T00:00:00+00:00",
          "total": 1,
          "days": [
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2023-12-10T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2023-12-17T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2023-12-24T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2023-12-31T00:00:00+00:00",
          "total": 2,
          "days": [
            0,
            0,
            1,
            0,
            1,
            0,
            0
          ]
        },
        {
          "week": "2024-01-07T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-01-14T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-01-21T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-01-28T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-02-04T00:00:00+00:00",
          "total": 1,
          "days": [
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-02-11T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-02-18T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-02-25T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-03-03T00:00:00+00:00",
          "total": 1,
          "days": [
            0,
            1,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-03-10T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-03-17T00:00:00+00:00",
          "total": 2,
          "days": [
            0,
            0,
            0,
            0,
            0,
            1,
            1
          ]
        },
        {
          "week": "2024-03-24T00:00:00+00:00",
          "total": 2,
          "days": [
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-03-31T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-04-07T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-04-14T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-04-21T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-04-28T00:00:00+00:00",
          "total": 2,
          "days": [
            2,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-05T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-12T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-19T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-05-26T00:00:00+00:00",
          "total": 1,
          "days": [
            0,
            0,
            0,
            0,
            1,
            0,
            0
          ]
        },
        {
          "week": "2024-06-02T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-09T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-16T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-23T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-06-30T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-07T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-14T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-21T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-07-28T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-04T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-11T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-18T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-08-25T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-01T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-08T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-15T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-22T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-09-29T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-06T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-13T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-20T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-10-27T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-11-03T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        },
        {
          "week": "2024-11-10T00:00:00+00:00",
          "total": 0,
          "days": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      ]
    },
    "statistics": {
      "size": 134708,
      "stars": 1767,
      "forks": 466,
      "open_issues": 14,
      "watchers": 1767,
      "default_branch": "2.1.x",
      "license": "GNU General Public License v3.0"
    }
  }
}